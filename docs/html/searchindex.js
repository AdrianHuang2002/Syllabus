Search.setIndex({"docnames": ["background/curriculum_learning", "background/ued", "benchmarks", "curricula/custom_curricula", "curricula/implemented_curricula", "evaluation/evaluation", "index", "installation", "logging", "modules/modules", "modules/syllabus", "modules/syllabus.core", "modules/syllabus.core.curriculum", "modules/syllabus.core.task_interface", "modules/syllabus.curricula", "modules/syllabus.curricula.domain_randomization", "modules/syllabus.curricula.plr", "modules/syllabus.examples", "modules/syllabus.examples.models", "modules/syllabus.examples.task_wrappers", "modules/syllabus.task_space", "modules/syllabus.tests", "quickstart"], "filenames": ["background/curriculum_learning.rst", "background/ued.rst", "benchmarks.rst", "curricula/custom_curricula.rst", "curricula/implemented_curricula.rst", "evaluation/evaluation.rst", "index.rst", "installation.rst", "logging.rst", "modules/modules.rst", "modules/syllabus.rst", "modules/syllabus.core.rst", "modules/syllabus.core.curriculum.rst", "modules/syllabus.core.task_interface.rst", "modules/syllabus.curricula.rst", "modules/syllabus.curricula.domain_randomization.rst", "modules/syllabus.curricula.plr.rst", "modules/syllabus.examples.rst", "modules/syllabus.examples.models.rst", "modules/syllabus.examples.task_wrappers.rst", "modules/syllabus.task_space.rst", "modules/syllabus.tests.rst", "quickstart.rst"], "titles": ["Curriculum Learning", "Unsupervised Environment Design", "Benchmarks", "Creating Your Own Curriculum", "Curriculum Methods", "Evaluation", "Syllabus Documentation", "Installation", "Logging", "syllabus", "syllabus package", "Global Synchronization", "Curriculum", "Task Interface", "syllabus.curricula package", "Domain Randomization", "Prioritized Level Replay (PLR) Curriculum", "Examples", "syllabus.examples.models package", "Example TaskWrappers", "Task Spaces", "syllabus.tests package", "Quickstart"], "terms": {"syllabu": [2, 3, 4, 7, 8, 15, 16], "": [3, 4, 11, 12, 13, 16, 17, 19, 21], "api": [11, 12, 14, 16, 21], "i": [0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 16, 17, 19, 20, 21, 22], "unifi": 12, "interfac": [6, 12, 14, 19, 21], "learn": [1, 2, 3, 5, 10, 11, 12, 13, 15, 16, 17], "method": [2, 5, 11, 12, 14, 16, 19, 21], "curricula": [3, 4, 6, 8, 9, 10, 12, 13, 15, 16, 19, 21, 22], "follow": [3, 11, 12, 16, 20], "thi": [0, 4, 5, 11, 12, 13, 16, 17, 18, 19, 20, 21], "can": [3, 4, 5, 6, 11, 12, 13, 16, 17, 19, 20], "us": [3, 4, 5, 6, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22], "all": [3, 11, 12, 13, 17, 18, 19], "infrastructur": [3, 11, 12], "we": [2, 3, 4, 5, 6, 12, 13, 16, 17, 19], "hope": 12, "futur": [10, 12], "research": 12, "provid": [3, 4, 6, 11, 12, 13, 14, 16, 19, 20], "implement": [2, 3, 4, 5, 6, 11, 12, 13, 16, 19, 20], "encourag": 12, "reproduc": [12, 19], "eas": 12, "The": [3, 4, 11, 12, 13, 16, 19, 22], "full": [12, 16, 17, 20], "document": 12, "class": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "found": [12, 17], "core": [6, 10, 22], "packag": [6, 9, 17], "ha": [4, 6, 8, 11, 12, 13, 16, 19, 21], "three": 12, "main": [3, 10, 11, 12, 16, 17, 19], "job": 12, "maintain": [4, 12], "sampl": [3, 4, 5, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22], "distribut": [3, 5, 11, 12, 16, 17, 18], "over": [3, 4, 12, 20], "task": [3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 19, 21], "space": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16], "incorpor": [11, 12], "feedback": [3, 11, 12], "from": [3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "environ": [3, 4, 5, 6, 11, 12, 13, 14, 16, 17, 19, 20, 21], "train": [3, 5, 6, 10, 11, 12, 16, 17, 20, 22], "process": [3, 6, 10, 11, 12, 16, 17], "updat": [2, 3, 10, 11, 12, 13, 14, 16, 17, 19, 21], "draw": 12, "In": [12, 16, 17], "realiti": 12, "whatev": 12, "you": [3, 4, 5, 6, 11, 12, 13, 16, 17, 19, 20, 22], "want": [12, 16, 19, 22], "uniform": [11, 12, 16], "determinist": [12, 16, 18], "sequenc": [12, 17], "singl": [6, 12, 16, 21], "constant": [3, 12, 16], "depend": [6, 11, 12, 16], "To": [3, 12, 13, 16, 22], "multipl": [3, 4, 6, 11, 12, 16, 17, 19, 21], "update_on_step": [3, 10, 11, 12, 14, 16, 21], "update_task_progress": [3, 10, 11, 12, 14, 16, 21], "update_on_episod": [3, 10, 12, 14, 16], "update_on_step_batch": [3, 10, 11, 12, 14, 16], "update_curriculum_batch": [3, 12], "domain": [0, 2, 6], "random": [2, 6, 11, 13, 19, 21], "sequenti": [6, 9, 10], "simpl": [6, 13, 15, 16], "box": [6, 20], "progress": [3, 6, 11, 12, 14, 16, 20, 21], "priorit": [2, 3, 6, 11, 17], "level": [2, 3, 6, 11, 17], "replai": [2, 3, 6, 11, 17], "creat": [4, 6, 11, 19], "your": [5, 6, 11, 16, 19, 22], "own": [6, 22], "requir": [5, 6, 11, 16], "recommend": [6, 16], "option": [6, 11, 16, 19, 21], "need": [3, 11, 13, 16, 17, 18, 19, 22], "do": [3, 5, 11, 13, 16, 17, 19], "write": [3, 13], "subclass": [3, 11, 13, 17, 18, 19], "each": [3, 5, 11, 13, 16, 17, 19], "meant": [3, 11], "differ": [3, 4, 5, 6, 11, 13, 19], "context": [3, 17], "By": [3, 4], "automat": [3, 11], "work": [2, 3, 4, 6, 17, 19, 20], "tool": 3, "k": [3, 11, 12, 14, 16, 21], "int": [3, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21], "1": [3, 11, 12, 14, 16, 17, 18, 20, 21], "return": [3, 5, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21], "list": [3, 4, 5, 11, 12, 13, 14, 16, 19, 20, 21], "how": [3, 11, 16, 22], "decid": 3, "which": [3, 4, 5, 6, 11, 12, 13, 16, 19], "plai": [3, 4, 13], "most": [3, 11, 16], "some": [3, 5, 11, 13, 16, 19], "combin": 3, "logic": 3, "probabl": [3, 4, 14, 16, 21], "choos": [3, 14, 21, 22], "ar": [3, 4, 5, 11, 13, 16, 18, 19, 20], "restrict": 3, "like": [3, 5, 13], "rl": [3, 4, 5, 7, 11, 16, 17, 22], "loop": [3, 16], "guid": 3, "its": [3, 11, 12, 13, 14, 16, 19, 21], "select": [3, 19], "These": [3, 4], "might": [3, 5, 11, 13], "reward": [3, 4, 11, 12, 13, 16, 17], "error": [3, 12], "valu": [3, 16, 17, 19], "agent": [3, 4, 5, 6, 10, 11, 13, 16, 17], "other": [3, 13, 19], "metric": [3, 11, 12, 13, 14, 16, 21], "defin": [3, 6, 12, 13, 14, 17, 18, 19, 20, 21], "type": [3, 11, 12, 13, 14, 19, 21], "inform": [3, 4, 11, 12, 13, 16, 19, 21], "one": [3, 11, 12, 13, 17, 18, 22], "more": [2, 3, 4, 12, 13, 16, 20, 22], "call": [3, 11, 13, 17, 18, 19, 21], "either": [3, 4, 12, 16, 22], "after": [3, 11, 13, 16, 19, 21], "step": [3, 4, 5, 10, 11, 12, 13, 14, 16, 17, 19, 21], "episod": [3, 4, 5, 11, 12, 13, 14, 16, 17, 19, 21], "It": [3, 4, 6, 12, 13], "receiv": [3, 11], "name": [3, 11, 17], "boolean": [3, 17], "float": [3, 11, 12, 13, 14, 16, 20, 21], "indic": [3, 4, 12], "current": [3, 6, 8, 11, 12, 13, 14, 16, 19, 20, 21], "true": [3, 11, 12, 13, 14, 16, 17, 19, 21], "0": [3, 12, 14, 15, 16, 17, 19], "typic": [3, 5, 11, 12, 13, 16, 19, 21], "complet": [3, 4, 12, 13, 19], "ob": [3, 12, 14, 16, 17, 19, 21], "rew": [3, 12, 14, 16, 17, 21], "done": [3, 11, 12, 13, 14, 16, 17, 21], "info": [3, 11, 12, 13, 14, 16, 17, 19, 21], "onc": [3, 17], "Not": 3, "yet": [3, 11, 13, 16, 19, 21], "synchron": [3, 9, 10, 12, 17], "wrapper": [3, 5, 11, 13, 17, 19, 22], "update_on_demand": [3, 10, 12, 14, 16], "learner": [3, 11, 17], "td": 3, "gradient": [3, 12], "norm": 3, "never": [3, 11, 13, 19, 21], "individu": 3, "dictionari": [3, 11, 12, 13, 19, 21], "arbitrari": [3, 12, 14, 16], "onli": [2, 3, 6, 11, 13, 16, 17, 19, 20, 21], "so": [3, 5, 13, 16, 17, 19, 22], "overrid": [3, 13, 19], "For": [0, 2, 3, 4, 5, 16, 17, 22], "exampl": [3, 5, 6, 9, 10, 11, 13, 16], "through": [3, 8, 13, 19], "If": [3, 5, 11, 13, 17, 19, 21], "set": [3, 4, 5, 11, 13, 16, 19, 21, 22], "fals": [3, 12, 14, 15, 16, 17, 18, 21], "when": [3, 4, 11, 13, 16, 17], "initi": [3, 4, 10, 11, 13, 17, 18, 19, 21], "prevent": 3, "being": [3, 12], "improv": [3, 5], "perform": [2, 3, 4, 5, 13, 17, 18], "an": [3, 4, 5, 6, 11, 13, 14, 17, 19, 20, 21], "except": [3, 11], "same": [3, 5, 11, 16, 22], "suggest": [3, 16], "rais": [3, 12, 16], "default": [3, 12, 13, 16], "support": [3, 4, 6, 8, 12, 13, 14, 19, 20, 21], "conveni": [3, 11, 12], "featur": [3, 10], "_sample_distribut": 3, "log_metr": [3, 8, 11, 12, 16], "writer": [3, 11, 12, 16], "log": [3, 6, 11, 12, 13, 16, 17], "specif": [3, 13, 19], "tensorboard": [3, 8, 12, 16], "weight": [2, 3, 8, 16, 17], "bias": [2, 3, 5, 8], "logger": 3, "should": [3, 11, 13, 16, 17, 18, 19, 21], "discret": [3, 4, 14, 20], "also": [3, 4, 6, 11, 13, 16, 19, 21], "addit": [3, 13, 16, 19], "update_list": 3, "batch": [3, 12, 14, 16, 17, 18], "update_data": [3, 12, 14], "data": [2, 3, 16, 17], "overridden": [3, 11, 12, 17, 18, 20], "effici": [3, 12, 13, 17, 19, 20], "simpli": [3, 13, 19], "iter": 3, "specifi": [3, 12, 14, 20], "two": [3, 19], "requires_step_upd": [3, 10, 14, 15, 16, 21], "requires_central_upd": [3, 10, 14, 15, 16, 21], "user": 3, "ad": [3, 11, 16], "warn": [3, 16], "too": 3, "mani": 3, "without": [3, 14, 17, 19], "small": [4, 18], "collect": 4, "includ": [0, 4, 6, 11, 13, 19, 20], "techniqu": 4, "often": [4, 19], "practic": [4, 16], "rare": 4, "highlight": 4, "literatur": 4, "simul": 4, "anneal": 4, "difficulti": 4, "easi": [4, 5, 6], "hard": 4, "have": [4, 6, 13, 19], "sever": 4, "popular": [4, 6, 16, 22], "baselin": [2, 4, 6, 11, 15, 16], "jiang": [4, 17], "et": [1, 4, 17], "al": [1, 4, 17], "2021": 4, "introduc": [4, 16], "kanitscheid": 4, "A": [0, 4, 13, 15, 17], "strong": [4, 15], "uniformli": [4, 5, 15], "order": [4, 17, 19], "prespecifi": 4, "number": [4, 11, 12, 13, 14, 16, 17, 19, 20, 21], "manual": [4, 14], "design": [4, 6, 19], "feel": 4, "result": [4, 5, 11, 12, 13, 14, 16, 17, 21], "best": 4, "final": [4, 13, 19], "come": 4, "soon": 4, "function": [4, 8, 11, 12, 13, 16, 17, 18, 19], "stop": [4, 11], "criteria": 4, "instead": [4, 17, 18], "fix": [4, 16], "expand": 4, "zero": [1, 4], "center": [4, 17], "rang": [4, 16, 22], "increas": [4, 16], "next": [4, 11, 13, 14, 16, 21], "stage": 4, "threshold": 4, "met": 4, "heurist": 4, "estim": [4, 16], "fast": [4, 14], "slow": [4, 14], "exponenti": [4, 14], "move": [4, 14], "averag": [4, 14], "ema": 4, "rate": [4, 12, 14], "measur": [4, 5, 16], "between": [4, 19], "reweight": 4, "adjust": 4, "time": [4, 16], "delai": 4, "assign": 4, "higher": [4, 16], "veri": [4, 13, 19], "high": 4, "low": 4, "forget": 4, "read": [4, 11], "origin": [4, 16], "paper": [0, 4, 16, 17], "multi": [4, 18], "complex": [1, 4, 13, 20], "visual": 4, "explor": 4, "minecraft": 4, "regret": 4, "particular": 4, "instanti": 4, "buffer": [4, 17], "base": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "open": 4, "sourc": 4, "http": [4, 14, 16, 17], "github": [4, 16, 17], "com": [4, 16, 17], "facebookresearch": [4, 16, 17], "been": [2, 4, 13, 16, 19], "modifi": [4, 5, 13, 16, 19], "just": [4, 13, 19], "seed": [4, 11, 13, 16, 17, 19, 21, 22], "plr": [4, 6], "promin": 4, "librari": [6, 11, 22], "curriculum": [1, 2, 5, 11, 14, 15, 21], "reinforc": [0, 6], "algorithm": [2, 6, 16], "framework": [0, 6, 16], "those": [6, 16], "across": [6, 22], "run": [5, 6, 11, 13, 17, 18, 21], "make": [5, 6, 11, 13, 16, 19, 22], "add": [6, 13, 16, 19, 20, 21], "them": [6, 17, 18], "exist": [6, 11, 13, 19, 22], "code": [5, 6, 16, 17, 19, 22], "take": [6, 17, 18], "few": [5, 6, 13, 19], "line": [6, 16], "script": 6, "becaus": [5, 6], "share": [6, 11], "swap": 6, "out": [5, 6, 22], "chang": [5, 6, 11, 12, 13, 16, 17, 19], "python": [6, 11, 22], "nativ": [6, 22], "multiprocess": [5, 6, 11, 12, 17, 20, 22], "rai": [6, 11, 16, 22], "actor": [6, 16, 17, 18], "rllib": [6, 11, 16], "cleanrl": [6, 11, 16], "stabl": [6, 11, 16], "3": [6, 11, 16, 17], "monobeast": 6, "torchbeast": [6, 11], "preliminari": [6, 8], "multiag": 6, "pettingzoo": [6, 13], "quickstart": 6, "subpackag": 9, "submodul": [9, 10], "curriculum_bas": 6, "modul": [9, 10], "curriculum_sync_wrapp": 10, "environment_sync_wrapp": 10, "environment_task_env": [], "environment_task_wrapp": [], "multivariate_curriculum_wrapp": 10, "reinit_task_wrapp": [], "subclass_task_wrapp": [], "util": [9, 10, 16], "content": [9, 10], "domain_random": 15, "learning_progress": [9, 10], "noop": [9, 10, 12], "simple_box": [9, 10], "cleanrl_cartpol": [9, 10], "cleanrl_minihack_plr": [9, 10], "cleanrl_pettingzoo_pistonball_plr": [], "rllib_cartpol": [9, 10], "torchbeast_nethack": [9, 10], "vtrace": [9, 10], "task_spac": [9, 10, 11, 12, 13, 14, 15, 16, 22], "test_task_spac": [], "test": [2, 5, 9, 10, 14, 17, 20], "sync_test_curriculum": [9, 10], "sync_test_env": [9, 10], "add_task": [10, 11, 12, 13, 14, 15, 20], "num_task": [11, 12, 20], "update_curriculum": 16, "curriculumwrapp": [10, 11], "batch_update_curriculum": [], "count_task": [11, 20], "get_task": [11, 20], "multiprocessingcurriculumwrapp": [10, 11], "start": [11, 13, 17, 19], "raycurriculumwrapp": [10, 11], "make_multiprocessing_curriculum": [10, 11, 22], "make_ray_curriculum": [10, 11, 22], "remote_cal": [10, 11], "multiprocessingsyncwrapp": [10, 11, 22], "reset": [5, 10, 11, 13, 17, 19, 21], "pettingzoomultiprocessingsyncwrapp": [10, 11], "raysyncwrapp": [10, 11, 22], "change_task": [11, 13, 17, 19], "pettingzootaskenv": 13, "get_current_task": 13, "taskenv": [13, 21], "observ": [10, 11, 12, 13, 17, 19, 21], "multitaskwrapp": [10, 11], "reinittaskwrapp": 13, "decode_task": 13, "encode_task": 13, "subclasstaskwrapp": 13, "current_task": 13, "usageerror": [10, 11], "decorate_all_funct": [10, 11], "enumerate_ax": [10, 11], "plr_wrapper": 16, "task_sampl": 16, "domainrandom": [15, 22], "learningprogresscurriculum": [10, 14], "on_step": [10, 14], "noopcurriculum": [10, 14], "sequentialcurriculum": [10, 14, 21], "remaining_task": [10, 14], "simpleboxcurriculum": [10, 14], "task_wrapp": [10, 17], "cartpole_task_wrapp": [10, 17], "minigrid_task_wrapp": [10, 17], "minihack_task_wrapp": [10, 17], "nethack_task_wrapp": [10, 17], "pistonball_task_wrapp": [10, 17], "get_action_and_valu": [10, 17, 18], "get_valu": [10, 16, 17, 18], "layer_init": [10, 17], "make_env": [10, 17, 21], "parse_arg": [10, 17], "crop": [10, 17], "forward": [10, 11, 17, 18], "net": [10, 17], "nethacknet": [10, 17], "initial_st": [10, 17], "randomnet": [10, 17], "resettingenviron": [10, 17], "close": [10, 17], "act": [10, 17, 18], "compute_baseline_loss": [10, 17], "compute_entropy_loss": [10, 17], "compute_policy_gradient_loss": [10, 17], "create_buff": [10, 17], "create_env": [10, 17], "get_batch": [10, 17], "nested_map": [10, 17], "parse_logpath": [10, 17], "vtracefromlogitsreturn": [10, 17], "behavior_action_log_prob": [10, 17], "log_rho": [10, 17], "pg_advantag": [10, 17], "target_action_log_prob": [10, 17], "v": [10, 16, 17], "vtracereturn": [10, 17], "action_log_prob": [10, 17], "from_importance_weight": [10, 17], "from_logit": [10, 17], "taskspac": [10, 11, 12, 14, 15, 16, 20, 22], "contain": [11, 13, 19, 20, 21], "decod": 20, "encod": [13, 19, 20], "increase_spac": 20, "list_task": 20, "task_nam": [12, 15, 20], "synctestcurriculum": [10, 21], "get_stat": [10, 21], "synctestenv": [10, 21], "create_minigrid_env": [10, 21], "create_nethack_env": [10, 21], "create_synctest_env": [10, 21], "evaluate_random_polici": [10, 21], "run_episod": [10, 21], "run_episodes_queu": [10, 21], "test_native_multiprocess": [10, 21], "test_ray_multiprocess": [10, 21], "test_single_process": [10, 21], "random_start_task": [12, 15], "callabl": [11, 12, 13, 15], "none": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "object": [11, 12, 13, 16, 17, 18, 19, 20, 21], "gym": [11, 12, 13, 14, 16, 17, 20, 21], "ani": [11, 12, 14, 15, 16, 20, 21], "log_full_dist": 12, "todo": [11, 12, 13, 14, 19], "clean": [12, 17], "up": [12, 17, 20, 22], "wandb": [2, 12, 17], "condit": 12, "import": [5, 11, 12, 17, 20, 22], "param": 12, "summari": 12, "properti": [11, 12, 13, 16, 17, 18, 19, 20], "count": [12, 17], "countabl": 12, "otherwis": 12, "paramet": [11, 12, 13, 16, 18], "tupl": [11, 12, 13, 14, 16, 17, 20], "enumer": 12, "empti": 12, "dict": [11, 12, 13, 16, 17], "str": [11, 12, 16], "header": 12, "enum": 12, "update_typ": [11, 12, 16], "kei": [11, 12, 13, 17, 21], "map": [12, 13], "step_batch": 12, "on_demand": [11, 12, 16], "task_progress": 12, "arg": [11, 12, 13, 16, 17, 18, 19, 21], "appropri": 12, "argument": [12, 13, 16], "given": [12, 13, 14, 16, 17, 21], "notimplementederror": 12, "potenti": [12, 16], "vari": 12, "input": [12, 14, 16, 17, 18], "episode_return": [12, 14, 16], "trajectori": [12, 16], "r": 12, "bool": [11, 12, 13, 16, 19], "teh": 12, "end": [11, 12, 13, 16], "extra": [11, 12, 13, 17, 19, 21], "step_result": [11, 12, 14, 16], "optim": [12, 17], "messag": 12, "pass": [12, 13, 16, 17, 18, 19], "throughput": 12, "toward": [5, 12], "success": [12, 14, 16, 21], "_ray_trace_ctx": 11, "task_queu": [11, 17, 21, 22], "simplequeu": [11, 17], "update_queu": [11, 17, 21, 22], "sequential_start": 11, "send": [11, 16], "wrap": [11, 13, 22], "correspond": 11, "thread": 11, "complete_queu": [11, 17], "actor_nam": 11, "learningprogress": 11, "remot": 11, "decor": 11, "annot": 11, "explicitli": 11, "here": [5, 11, 13, 17, 19], "intend": 11, "privat": 11, "helper": [11, 17], "func": 11, "via": [1, 11], "note": [11, 17], "caus": 11, "block": [11, 18], "oper": [11, 13], "parallel": [11, 16], "env": [11, 13, 16, 17, 19, 21, 22], "default_task": [11, 14], "buffer_s": 11, "global_task_complet": 11, "ndarrai": 11, "queuelearningprogresscurriculum": 11, "kwarg": [11, 13, 14, 17, 18, 19, 21], "state": [11, 13, 19, 21], "gener": [11, 13, 16, 18, 19, 21], "integ": [11, 13, 19, 21], "alreadi": [11, 13, 17, 19, 21], "rng": [11, 13, 19, 21], "moreov": [11, 13, 19, 21], "case": [11, 13, 19, 21], "right": [11, 13, 19, 21], "again": [11, 13, 17, 19, 21], "return_info": [11, 13, 19, 21], "action": [11, 13, 16, 17, 18, 19, 21], "timestep": [11, 13, 19], "dynam": [5, 11, 13], "reach": [11, 13], "respons": [11, 13], "accept": [11, 13], "amount": [11, 13, 20], "previou": [11, 13], "whether": [11, 13, 16], "further": [11, 13], "undefin": [11, 13], "auxiliari": [11, 13], "diagnost": [11, 13], "help": [11, 13, 19, 22], "debug": [11, 13], "sometim": [11, 13], "baseparallelwrap": [11, 13], "where": 11, "raylearningprogresscurriculum": 11, "new_task": [11, 13, 19, 21], "easiest": [11, 13, 19], "system": [11, 13, 19], "would": [11, 13, 19], "instanc": [11, 13, 17, 18, 19], "variabl": [11, 13, 19], "mai": [5, 11, 13, 16, 19], "even": [11, 13, 19], "reiniti": [11, 13, 17, 19], "re": [2, 11, 13, 19], "init": [11, 13, 17, 18, 19], "sure": [5, 11, 13, 19, 22], "check": [11, 13, 19, 22], "middl": [11, 13, 19], "avoid": [11, 13, 19], "unexpect": [11, 13, 19], "behavior": [11, 13, 18, 19], "parallelenv": 13, "goal": [13, 17, 19], "find": [13, 16, 19], "wai": [13, 19, 20], "central": [13, 19], "unlik": [13, 21], "task_complet": [13, 21], "self": [13, 16, 17, 21], "reli": [13, 17, 21], "num_compon": 11, "component_nam": 11, "subspac": 11, "nle": [13, 19], "definit": [13, 19], "format": [13, 19], "env_fn": [13, 21], "taskwrapp": [6, 10, 13, 17, 22], "solut": 13, "ineffici": 13, "achiev": [13, 19], "better": 13, "special": [5, 13], "directli": [5, 11, 13, 17, 19], "edit": [13, 19], "ensur": [13, 16, 19], "ones": [13, 19], "keep": [5, 13, 19], "track": [13, 14, 19], "sinc": [5, 13, 17, 18, 19], "befor": [5, 13, 16, 19], "convert": [13, 20], "element": 13, "multidiscret": [13, 20], "usabl": 13, "reinit": 13, "ident": 13, "descript": 13, "along": [13, 19], "avail": [2, 13, 17, 19], "task_subclass": 13, "env_init_kwarg": 13, "function_decor": 11, "list_or_s": 11, "prioritizedlevelreplai": 16, "rolloutstorag": 16, "after_upd": 16, "compute_return": 16, "insert": 16, "tasksampl": [], "requires_value_buff": 16, "sample_weight": 16, "update_task_scor": 16, "update_with_rollout": 16, "arxiv": [14, 16, 17], "org": [14, 16, 17], "ab": [14, 17], "2106": 14, "14876": 14, "asid": 14, "curriculum_arg": [14, 16, 21], "curriculum_kwarg": [14, 16, 21], "success_prob": [14, 16], "upon": [14, 16, 21], "failur": [14, 16, 21], "task_list": 14, "num_repeat": 14, "repeat_list": 14, "remain": 14, "5": [14, 16, 17], "success_threshold": 14, "25": 14, "required_success": 14, "10": [5, 14, 17, 21], "task_sampler_kwargs_dict": 16, "action_spac": [16, 17], "devic": [16, 17], "cpu": 16, "num_step": [16, 21], "256": [16, 18], "num_process": 16, "64": [16, 18], "gamma": [16, 17], "999": 16, "gae_lambda": 16, "95": 16, "suppress_usage_warn": 16, "next_valu": 16, "mask": [16, 18], "action_log_dist": 16, "value_pr": 16, "num_actor": 16, "strategi": 16, "value_l1": 16, "replay_schedul": 16, "proportion": 16, "score_transform": 16, "rank": 16, "temperatur": 16, "ep": 16, "05": 16, "rho": 16, "nu": 16, "alpha": 16, "staleness_coef": 16, "staleness_transform": 16, "power": 16, "staleness_temperatur": 16, "actor_index": [16, 17], "task_idx": 16, "score": 16, "rollout": 16, "cartpoletaskwrapp": [17, 19], "minigridtaskwrapp": [17, 19], "minihacktaskwrapp": [17, 19], "nethacktaskwrapp": [17, 19], "pistonballtaskwrapp": [17, 19], "x": [17, 18], "layer": [17, 18], "std": 17, "4142135623730951": 17, "bias_const": 17, "env_id": 17, "idx": 17, "capture_video": 17, "run_nam": 17, "step_queu": 17, "full_log_prob": [17, 18], "height": 17, "width": 17, "height_target": 17, "width_target": 17, "below": [16, 17], "coordin": 17, "calcul": 17, "around": 17, "y": 17, "b": 17, "h": 17, "w": 17, "2": [17, 21], "alia": 17, "observation_shap": 17, "num_act": [17, 18], "use_lstm": 17, "embedding_dim": 17, "32": [17, 18], "crop_dim": 17, "9": 17, "num_lay": 17, "env_output": 17, "core_st": 17, "comput": [16, 17, 18], "everi": [16, 17, 18], "although": [17, 18], "recip": [17, 18], "within": [17, 18, 20], "afterward": [17, 18], "former": [17, 18], "care": [17, 18], "regist": [17, 18], "hook": [17, 18], "while": [11, 17, 18], "latter": [17, 18], "silent": [17, 18], "ignor": [17, 18, 19], "batch_siz": 17, "gym_env": 17, "turn": 17, "someth": 17, "ed": 17, "indefinit": 17, "flag": 17, "free_queu": 17, "full_queu": 17, "model": [10, 11, 16, 17], "initial_agent_state_buff": 17, "video_dir": 17, "advantag": [16, 17], "logit": [17, 18], "entropi": 17, "loss": [16, 17], "e": [11, 17], "neg": 17, "polici": [16, 17, 18], "observation_spac": 17, "num_overlapping_step": 17, "char": 17, "observation_kei": 17, "basecontext": 17, "lock": 17, "unlock": 17, "_thread": 17, "actor_model": 17, "initial_agent_st": 17, "schedul": [16, 17], "f": 17, "n": 17, "num_episod": [17, 21], "wandb_run": 17, "trace": 17, "off": 17, "critic": [17, 18], "target": 17, "detail": [16, 17], "theori": 17, "see": [5, 11, 16, 17], "impala": 17, "scalabl": 17, "deep": 17, "architectur": 17, "espeholt": 17, "soyer": 17, "muno": 17, "1802": 17, "01561": 17, "field": 17, "4": 17, "policy_logit": 17, "discount": [16, 17], "bootstrap_valu": 17, "clip_rho_threshold": 17, "clip_pg_rho_threshold": 17, "behavior_policy_logit": 17, "target_policy_logit": 17, "softmax": [16, 17], "new": [13, 16, 19], "minigrid": 19, "allow": [5, 13, 16, 19], "request": 19, "unknown": 19, "outsid": 19, "use_provided_task": 19, "wa": 19, "meet": 19, "u": 19, "predefin": 19, "copi": [17, 19], "integr": [19, 22], "nethack": 19, "howev": 5, "cast": 19, "manipul": 19, "__class__": 19, "doe": 19, "safe": 19, "regardless": 19, "activ": [2, 19], "pars": 19, "inventori": 19, "item": 19, "gain": [18, 19], "pettingzootaskwrapp": [13, 19], "gym_spac": 20, "continu": [2, 20], "graph": 20, "speed": 20, "sample_interv": 20, "exclud": 20, "invalid": 20, "num_env": [17, 21], "100": 21, "env_arg": 21, "env_kwarg": 21, "sync": 21, "built": 22, "extend": 22, "uniformcurriculum": [], "sample_env": 22, "separ": 22, "channel": [17, 18, 22], "backend": 22, "match": [2, 22], "abl": [], "actual": 13, "configur": 13, "entir": [13, 17, 20], "custom": [13, 16, 17], "get": [5, 13, 17, 19], "intern": 13, "repres": [20, 22], "playabl": 20, "necessari": 20, "compon": 20, "version": [16, 20], "mutabl": 20, "valid": 20, "split": 20, "fulli": 20, "cleanrl_minigrid_plr": [9, 10], "cleanrl_ppo_minigrid_bas": [9, 10], "cleanrl_procgen": [9, 10], "cleanrl_procgen_plr": [9, 10], "dormant_neuron": [], "rllib_cartpole_bas": [9, 10], "vecenv": [9, 10], "categor": [17, 18], "num_input": 18, "num_output": 18, "nn": 18, "fixedcategor": [17, 18], "prob": 18, "validate_arg": 18, "log_prob": [17, 18], "mode": [17, 18], "sample_shap": 18, "shape": [17, 18], "minigridag": [17, 18], "obs_shap": 18, "arch": 18, "base_kwarg": 18, "minigridpolici": [17, 18], "evaluate_act": [17, 18], "is_recurr": [17, 18], "recurrent_hidden_state_s": [17, 18], "size": 18, "rnn_hx": 18, "apply_init_": [17, 18], "weight_init": 18, "bias_init": 18, "init_": [17, 18], "m": 18, "init_relu_": [17, 18], "init_tanh_": [17, 18], "basicblock": [17, 18], "n_channel": 18, "stride": 18, "residu": 18, "network": 18, "conv2d_tf": [17, 18], "conv2d": 18, "pad": 18, "tf": 18, "flatten": [17, 18], "tensor": 18, "mlpbase": [17, 18], "recurr": 18, "hidden_s": 18, "nnbase": [17, 18], "perceptron": 18, "recurrent_input_s": 18, "output_s": [17, 18], "procgenag": [17, 18], "resnetbas": [17, 18], "16": 18, "smallnetbas": [17, 18], "minigrid_model": [10, 17], "procgen_model": [10, 17], "procgen_task_wrapp": [10, 17], "convsequ": [10, 17], "get_output_shap": [10, 17], "residualblock": [10, 17], "evalu": [2, 6, 10, 17], "level_replay_evalu": [10, 17], "wrap_vecenv": [10, 17], "baserecycl": [], "estimate_neuron_scor": [], "intersected_dead_neurons_with_last_reset": [], "is_intermediated_requir": [], "is_logging_step": [], "is_reset": [], "is_update_it": [], "log_dead_neurons_count": [], "log_intersected_dead_neuron": [], "maybe_log_deadneuron": [], "maybe_update_weight": [], "update_reset_lay": [], "update_weight": [], "neuronrecycl": [], "create_mask_help": [], "create_mask": [], "recycle_dead_neuron": [], "neuronrecyclerschedul": [], "leastk_mask": [], "reset_momentum": [], "weight_reinit_random": [], "weight_reinit_zero": [], "runningmeanstd": [10, 17], "update_from_mo": [10, 17], "transposeimageprocgen": [10, 17], "transposeob": [10, 17], "close_extra": [10, 17], "get_imag": [10, 17], "get_view": [10, 17], "metadata": [10, 17], "render": [10, 17], "step_async": [10, 17], "step_env": [10, 17], "step_wait": [10, 17], "unwrap": [10, 17], "viewer": [10, 17], "vecenvobservationwrapp": [10, 17], "vecenvwrapp": [10, 17], "vecextractdictob": [10, 17], "vecmonitor": [10, 17], "vecnorm": [10, 17], "reset_ag": [10, 17], "reset_alp_gmm": [10, 17], "reset_random": [10, 17], "vecpytorchprocgen": [10, 17], "raw_venv": [10, 17], "update_mean_var_count_from_mo": [10, 17], "procgentaskwrapp": [17, 19], "input_shap": 17, "out_channel": 17, "ev_env": 17, "use_train_se": 17, "env_nam": 17, "num_level": 17, "start_level": 17, "recycl": [], "dead": [], "neuron": [], "all_layers_nam": [], "dead_neurons_threshold": [], "reset_start_layer_idx": [], "reset_period": [], "200000": [], "reset_start_step": [], "reset_end_step": [], "100000000": [], "logging_period": [], "20000": [], "sub_mean_scor": [], "attribut": [], "recycle_typ": [], "consid": [], "reset_lay": [], "index": [], "period": 5, "statist": [], "g": 11, "prev_neuron_scor": [], "last": [], "subtract": [], "is_cbp": [], "absolut": [], "normal": 17, "spatial": [], "dimens": [], "intermedi": [], "mean": [16, 17], "skip": 5, "element_scor": [], "dim": [], "neuron_scor": [], "update_step": [], "conv": [], "intermid": [], "log_dict_elements_per_neuron": [], "log_dict_neuron": [], "intersect": [], "log_dict": [], "percentag": [], "opt_stat": [], "init_method_outgo": [], "weight_scal": [], "incoming_scal": [], "outgoing_scal": [], "natur": [], "connect": [], "convolut": [], "neural": [], "next_lay": [], "outgo": [], "scale": [], "scalar": [], "incom": [], "neuron_mask": [], "current_param": [], "next_param": [], "equal": 19, "incoming_mask": [], "outgoing_mask": [], "param_dict": [], "activations_dict": [], "incoming_mask_dict": [], "outgoing_mask_dict": [], "ingoing_random_keys_dict": [], "outgoing_random_keys_dict": [], "reinitalizi": [], "randomli": [], "featuremap": [], "pytre": [], "score_typ": [], "redo": [], "recycle_r": [], "ones_fract": [], "binari": [], "top": [], "kept": [], "arrai": 17, "momentum": [], "weights_typ": [], "appli": [11, 16, 17], "non": [], "per": 17, "multipli": [], "epsilon": [16, 17], "0001": 17, "batch_mean": 17, "batch_var": 17, "batch_count": 17, "op": 17, "observationwrapp": 17, "abstract": 17, "asynchron": 17, "vector": [5, 11, 17], "becom": 17, "expect": [16, 17], "resourc": 17, "beyond": 17, "what": 17, "rgb": 17, "imag": 17, "human": 17, "rgb_arrai": 17, "still": 17, "cancel": 17, "until": 17, "invok": 17, "backward": 17, "compat": 17, "tell": 17, "pend": 17, "wait": 17, "taken": 17, "venv": [16, 17], "filenam": 17, "keep_buf": 17, "info_keyword": 17, "ret": 17, "clipob": 17, "cliprew": 17, "99": 17, "1e": 17, "08": 17, "use_tf": 17, "level_sampl": 17, "var": 17, "pseudorandom": 19, "captur": 19, "aren": 19, "t": [5, 19], "accident": 19, "correl": 19, "bigint": 19, "first": [5, 19], "won": 19, "under": [], "construct": [], "unsupervis": 6, "effect": 16, "pdf": 16, "2010": 16, "03934": 16, "tree": 16, "sucessfulli": 16, "2301": 16, "07608": 16, "fit": 16, "propos": [1, 16], "l1": 16, "equival": 16, "gae": 16, "magnitud": 16, "stale": 16, "occasion": 16, "capabnil": [], "highest": 16, "than": 16, "90": 16, "divers": 16, "hyperparamet": 16, "tune": 16, "procgen": [16, 17, 22], "alter": 16, "usag": [9, 10], "distirbut": 16, "appl": [], "green": [], "red": [], "customcallback": 16, "basecallback": 16, "callback": 16, "deriv": [], "verbos": 16, "output": [], "def": 16, "__init__": 16, "super": 16, "_on_step": 16, "training_env": 16, "get_attr": 16, "local": 16, "exact": [11, 16], "similar": 16, "doc": 16, "io": 16, "en": 16, "latest": 16, "advanc": 16, "html": 16, "10000": 16, "torch": 16, "no_grad": 16, "next_ob": 16, "216": 16, "ppo": 16, "py": [16, 17], "_": [], "_a": [], "link": [], "vwxyzjn": [], "blob": 17, "e421c2e50b81febf639fced51a69e2602593d50d": [], "l216": [], "_at": [], "consider": 5, "assum": 5, "drawn": 5, "therefor": 5, "good": [0, 5, 16], "shoudl": 5, "dure": 5, "ideal": 5, "held": 5, "approach": 5, "correctli": 5, "surprisingli": 5, "challeng": 5, "guidelin": 5, "mind": 5, "bia": 5, "shorter": 5, "accid": 5, "try": 5, "save": 5, "earn": 5, "lower": 5, "seem": 5, "obviou": 5, "don": 5, "tempt": 5, "timelimit": 5, "determinst": 16, "respect": 16, "plrcallback": 16, "sampler": 16, "One": [0, 16], "policy_entropi": 16, "least_confid": 16, "min_margin": 16, "one_step_td_error": 16, "transform": 16, "max": 16, "eps_greedi": 16, "greedi": 16, "proport": 16, "seen": 16, "linear": 16, "interpol": 16, "old": 16, "intial": [13, 16], "num": 16, "pleas": 16, "posit": 16, "keyword": 16, "store": 16, "cuda": 16, "factor": 16, "lambda": 16, "suppress": 16, "about": 16, "improp": 16, "paradigm": 1, "emerg": 1, "shot": 1, "transfer": 1, "denni": 1, "2020": 1, "dai": 0, "page": [0, 2], "proper": 0, "introduct": 0, "now": [0, 2, 11], "refer": 0, "survei": 0, "common": 13, "well": 13, "task_interfac": [], "directori": 19, "coupl": 19, "instal": 6, "pip": 7, "easier": 19, "global": [6, 9, 10, 12], "bidirect": 11, "sender": 11, "minqi": 17, "branch": 17, "ve": 11, "variou": [11, 22], "capabl": 16, "ref": 22, "batch_upd": 11, "update_batch": 12, "our": [2, 22], "usual": 22, "200": [20, 22], "public": 2, "benchmark": 6}, "objects": {"syllabus.core": [[12, 0, 0, "-", "curriculum_base"], [11, 0, 0, "-", "curriculum_sync_wrapper"], [11, 0, 0, "-", "environment_sync_wrapper"], [11, 0, 0, "-", "multivariate_curriculum_wrapper"], [11, 0, 0, "-", "utils"]], "syllabus.core.curriculum_base": [[12, 1, 1, "", "Curriculum"]], "syllabus.core.curriculum_base.Curriculum": [[12, 2, 1, "", "add_task"], [12, 2, 1, "", "log_metrics"], [12, 3, 1, "", "num_tasks"], [12, 2, 1, "", "sample"], [12, 3, 1, "", "tasks"], [12, 2, 1, "", "update"], [12, 2, 1, "", "update_batch"], [12, 2, 1, "", "update_on_demand"], [12, 2, 1, "", "update_on_episode"], [12, 2, 1, "", "update_on_step"], [12, 2, 1, "", "update_on_step_batch"], [12, 2, 1, "", "update_task_progress"]], "syllabus.core.curriculum_sync_wrapper": [[11, 1, 1, "", "CurriculumWrapper"], [11, 1, 1, "", "MultiProcessingCurriculumWrapper"], [11, 1, 1, "", "RayCurriculumWrapper"], [11, 4, 1, "", "make_multiprocessing_curriculum"], [11, 4, 1, "", "make_ray_curriculum"], [11, 4, 1, "", "remote_call"]], "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper": [[11, 2, 1, "", "add_task"], [11, 2, 1, "", "batch_update"], [11, 2, 1, "", "count_tasks"], [11, 2, 1, "", "get_tasks"], [11, 2, 1, "", "log_metrics"], [11, 3, 1, "", "num_tasks"], [11, 2, 1, "", "sample"], [11, 3, 1, "", "tasks"], [11, 2, 1, "", "update"], [11, 2, 1, "", "update_on_step"], [11, 2, 1, "", "update_on_step_batch"], [11, 2, 1, "", "update_task_progress"]], "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper": [[11, 2, 1, "", "add_task"], [11, 2, 1, "", "log_metrics"], [11, 2, 1, "", "start"], [11, 2, 1, "", "stop"]], "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper": [[11, 2, 1, "", "add_task"], [11, 2, 1, "", "batch_update"], [11, 2, 1, "", "count_tasks"], [11, 2, 1, "", "get_tasks"], [11, 2, 1, "", "log_metrics"], [11, 2, 1, "", "sample"], [11, 2, 1, "", "update"], [11, 2, 1, "", "update_on_step"], [11, 2, 1, "", "update_on_step_batch"], [11, 2, 1, "", "update_task_progress"]], "syllabus.core.environment_sync_wrapper": [[11, 1, 1, "", "MultiProcessingSyncWrapper"], [11, 1, 1, "", "PettingZooMultiProcessingSyncWrapper"], [11, 1, 1, "", "RaySyncWrapper"]], "syllabus.core.environment_sync_wrapper.MultiProcessingSyncWrapper": [[11, 2, 1, "", "add_task"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "step"]], "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper": [[11, 2, 1, "", "add_task"], [11, 3, 1, "", "agents"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "step"]], "syllabus.core.environment_sync_wrapper.RaySyncWrapper": [[11, 2, 1, "", "add_task"], [11, 2, 1, "", "change_task"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "step"]], "syllabus.core.multivariate_curriculum_wrapper": [[11, 1, 1, "", "MultitaskWrapper"]], "syllabus.core.multivariate_curriculum_wrapper.MultitaskWrapper": [[11, 2, 1, "", "log_metrics"], [11, 2, 1, "", "sample"]], "syllabus.core.task_interface": [[13, 0, 0, "-", "environment_task_env"], [13, 0, 0, "-", "reinit_task_wrapper"], [13, 0, 0, "-", "subclass_task_wrapper"], [13, 0, 0, "-", "task_wrapper"]], "syllabus.core.task_interface.environment_task_env": [[13, 1, 1, "", "PettingZooTaskEnv"], [13, 1, 1, "", "TaskEnv"]], "syllabus.core.task_interface.environment_task_env.PettingZooTaskEnv": [[13, 3, 1, "", "agents"], [13, 2, 1, "", "get_current_task"]], "syllabus.core.task_interface.environment_task_env.TaskEnv": [[13, 2, 1, "", "add_task"], [13, 2, 1, "", "change_task"], [13, 2, 1, "", "observation"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "step"]], "syllabus.core.task_interface.reinit_task_wrapper": [[13, 1, 1, "", "ReinitTaskWrapper"]], "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper": [[13, 2, 1, "", "change_task"], [13, 2, 1, "", "decode_task"], [13, 2, 1, "", "encode_task"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "step"]], "syllabus.core.task_interface.subclass_task_wrapper": [[13, 1, 1, "", "SubclassTaskWrapper"]], "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper": [[13, 2, 1, "", "change_task"], [13, 3, 1, "", "current_task"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "step"]], "syllabus.core.task_interface.task_wrapper": [[13, 1, 1, "", "PettingZooTaskWrapper"], [13, 1, 1, "", "TaskWrapper"]], "syllabus.core.task_interface.task_wrapper.PettingZooTaskWrapper": [[13, 3, 1, "", "agents"], [13, 2, 1, "", "get_current_task"]], "syllabus.core.task_interface.task_wrapper.TaskWrapper": [[13, 2, 1, "", "add_task"], [13, 2, 1, "", "change_task"], [13, 2, 1, "", "observation"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "step"]], "syllabus.core.utils": [[11, 5, 1, "", "UsageError"], [11, 4, 1, "", "decorate_all_functions"], [11, 4, 1, "", "enumerate_axes"]], "syllabus.curricula": [[15, 0, 0, "-", "domain_randomization"], [14, 0, 0, "-", "learning_progress"], [14, 0, 0, "-", "noop"], [14, 0, 0, "-", "sequential"], [14, 0, 0, "-", "simple_box"]], "syllabus.curricula.domain_randomization": [[15, 1, 1, "", "DomainRandomization"]], "syllabus.curricula.domain_randomization.DomainRandomization": [[15, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [15, 6, 1, "", "REQUIRES_STEP_UPDATES"], [15, 2, 1, "", "add_task"]], "syllabus.curricula.learning_progress": [[14, 1, 1, "", "LearningProgressCurriculum"]], "syllabus.curricula.learning_progress.LearningProgressCurriculum": [[14, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [14, 6, 1, "", "REQUIRES_STEP_UPDATES"], [14, 2, 1, "", "on_step"], [14, 2, 1, "", "update_task_progress"]], "syllabus.curricula.noop": [[14, 1, 1, "", "NoopCurriculum"]], "syllabus.curricula.noop.NoopCurriculum": [[14, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [14, 6, 1, "", "REQUIRES_STEP_UPDATES"], [14, 2, 1, "", "add_task"], [14, 2, 1, "", "sample"], [14, 2, 1, "", "update"], [14, 2, 1, "", "update_on_demand"], [14, 2, 1, "", "update_on_episode"], [14, 2, 1, "", "update_on_step"], [14, 2, 1, "", "update_on_step_batch"], [14, 2, 1, "", "update_task_progress"]], "syllabus.curricula.plr": [[16, 0, 0, "-", "plr_wrapper"], [16, 0, 0, "-", "task_sampler"]], "syllabus.curricula.plr.plr_wrapper": [[16, 1, 1, "", "PrioritizedLevelReplay"], [16, 1, 1, "", "RolloutStorage"]], "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay": [[16, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [16, 6, 1, "", "REQUIRES_STEP_UPDATES"], [16, 2, 1, "", "log_metrics"], [16, 2, 1, "", "sample"], [16, 2, 1, "", "update_on_demand"], [16, 2, 1, "", "update_on_episode"], [16, 2, 1, "", "update_on_step"], [16, 2, 1, "", "update_on_step_batch"], [16, 2, 1, "", "update_task_progress"]], "syllabus.curricula.plr.plr_wrapper.RolloutStorage": [[16, 2, 1, "", "after_update"], [16, 2, 1, "", "compute_returns"], [16, 2, 1, "", "insert"], [16, 2, 1, "", "to"]], "syllabus.curricula.plr.task_sampler": [[16, 1, 1, "", "TaskSampler"]], "syllabus.curricula.plr.task_sampler.TaskSampler": [[16, 2, 1, "", "after_update"], [16, 2, 1, "", "metrics"], [16, 3, 1, "", "requires_value_buffers"], [16, 2, 1, "", "sample"], [16, 2, 1, "", "sample_weights"], [16, 2, 1, "", "update_task_score"], [16, 2, 1, "", "update_with_rollouts"]], "syllabus.curricula.sequential": [[14, 1, 1, "", "SequentialCurriculum"]], "syllabus.curricula.sequential.SequentialCurriculum": [[14, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [14, 6, 1, "", "REQUIRES_STEP_UPDATES"], [14, 2, 1, "", "remaining_tasks"], [14, 2, 1, "", "sample"]], "syllabus.curricula.simple_box": [[14, 1, 1, "", "SimpleBoxCurriculum"]], "syllabus.curricula.simple_box.SimpleBoxCurriculum": [[14, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [14, 6, 1, "", "REQUIRES_STEP_UPDATES"], [14, 2, 1, "", "sample"], [14, 2, 1, "", "update_task_progress"]], "syllabus": [[17, 0, 0, "-", "examples"], [21, 0, 0, "-", "tests"]], "syllabus.examples": [[17, 0, 0, "-", "cleanrl_cartpole"], [17, 0, 0, "-", "cleanrl_minigrid_plr"], [17, 0, 0, "-", "cleanrl_minihack_plr"], [17, 0, 0, "-", "cleanrl_ppo_minigrid_base"], [17, 0, 0, "-", "cleanrl_procgen"], [17, 0, 0, "-", "cleanrl_procgen_plr"], [18, 0, 0, "-", "models"], [17, 0, 0, "-", "rllib_cartpole"], [17, 0, 0, "-", "rllib_cartpole_base"], [19, 0, 0, "-", "task_wrappers"], [17, 0, 0, "-", "torchbeast_nethack"], [17, 0, 0, "-", "vecenv"], [17, 0, 0, "-", "vtrace"]], "syllabus.examples.cleanrl_cartpole": [[17, 1, 1, "", "Agent"], [17, 4, 1, "", "layer_init"], [17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"]], "syllabus.examples.cleanrl_cartpole.Agent": [[17, 2, 1, "", "get_action_and_value"], [17, 2, 1, "", "get_value"]], "syllabus.examples.cleanrl_minigrid_plr": [[17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"]], "syllabus.examples.cleanrl_minihack_plr": [[17, 1, 1, "", "Agent"], [17, 4, 1, "", "layer_init"], [17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"]], "syllabus.examples.cleanrl_minihack_plr.Agent": [[17, 2, 1, "", "get_action_and_value"], [17, 2, 1, "", "get_value"]], "syllabus.examples.cleanrl_ppo_minigrid_base": [[17, 1, 1, "", "Agent"], [17, 4, 1, "", "layer_init"], [17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"]], "syllabus.examples.cleanrl_ppo_minigrid_base.Agent": [[17, 2, 1, "", "get_action_and_value"], [17, 2, 1, "", "get_value"]], "syllabus.examples.cleanrl_procgen": [[17, 1, 1, "", "Agent"], [17, 1, 1, "", "ConvSequence"], [17, 1, 1, "", "ResidualBlock"], [17, 4, 1, "", "layer_init"], [17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"]], "syllabus.examples.cleanrl_procgen.Agent": [[17, 2, 1, "", "get_action_and_value"], [17, 2, 1, "", "get_value"]], "syllabus.examples.cleanrl_procgen.ConvSequence": [[17, 2, 1, "", "forward"], [17, 2, 1, "", "get_output_shape"]], "syllabus.examples.cleanrl_procgen.ResidualBlock": [[17, 2, 1, "", "forward"]], "syllabus.examples.cleanrl_procgen_plr": [[17, 4, 1, "", "evaluate"], [17, 4, 1, "", "level_replay_evaluate"], [17, 4, 1, "", "make_env"], [17, 4, 1, "", "parse_args"], [17, 4, 1, "", "wrap_vecenv"]], "syllabus.examples.models": [[18, 0, 0, "-", "minigrid_model"], [18, 0, 0, "-", "procgen_model"]], "syllabus.examples.models.minigrid_model": [[18, 1, 1, "", "Categorical"], [18, 1, 1, "", "FixedCategorical"], [18, 1, 1, "", "MinigridAgent"], [18, 1, 1, "", "MinigridPolicy"], [18, 4, 1, "", "apply_init_"], [18, 4, 1, "", "init"], [18, 4, 1, "", "init_"], [18, 4, 1, "", "init_relu_"], [18, 4, 1, "", "init_tanh_"]], "syllabus.examples.models.minigrid_model.Categorical": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.minigrid_model.FixedCategorical": [[18, 2, 1, "", "log_probs"], [18, 2, 1, "", "mode"], [18, 2, 1, "", "sample"]], "syllabus.examples.models.minigrid_model.MinigridAgent": [[18, 2, 1, "", "get_action_and_value"], [18, 2, 1, "", "get_value"]], "syllabus.examples.models.minigrid_model.MinigridPolicy": [[18, 2, 1, "", "act"], [18, 2, 1, "", "evaluate_actions"], [18, 2, 1, "", "forward"], [18, 2, 1, "", "get_value"], [18, 3, 1, "", "is_recurrent"], [18, 3, 1, "", "recurrent_hidden_state_size"]], "syllabus.examples.models.procgen_model": [[18, 1, 1, "", "BasicBlock"], [18, 1, 1, "", "Categorical"], [18, 1, 1, "", "Conv2d_tf"], [18, 1, 1, "", "FixedCategorical"], [18, 1, 1, "", "Flatten"], [18, 1, 1, "", "MLPBase"], [18, 1, 1, "", "NNBase"], [18, 1, 1, "", "Policy"], [18, 1, 1, "", "ProcgenAgent"], [18, 1, 1, "", "ResNetBase"], [18, 1, 1, "", "SmallNetBase"], [18, 4, 1, "", "apply_init_"], [18, 4, 1, "", "init"], [18, 4, 1, "", "init_"], [18, 4, 1, "", "init_relu_"], [18, 4, 1, "", "init_tanh_"]], "syllabus.examples.models.procgen_model.BasicBlock": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.Categorical": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.Conv2d_tf": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.FixedCategorical": [[18, 2, 1, "", "log_probs"], [18, 2, 1, "", "mode"], [18, 2, 1, "", "sample"]], "syllabus.examples.models.procgen_model.Flatten": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.MLPBase": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.NNBase": [[18, 3, 1, "", "is_recurrent"], [18, 3, 1, "", "output_size"], [18, 3, 1, "", "recurrent_hidden_state_size"]], "syllabus.examples.models.procgen_model.Policy": [[18, 2, 1, "", "act"], [18, 2, 1, "", "evaluate_actions"], [18, 2, 1, "", "forward"], [18, 2, 1, "", "get_value"], [18, 3, 1, "", "is_recurrent"], [18, 3, 1, "", "recurrent_hidden_state_size"]], "syllabus.examples.models.procgen_model.ProcgenAgent": [[18, 2, 1, "", "get_action_and_value"], [18, 2, 1, "", "get_value"]], "syllabus.examples.models.procgen_model.ResNetBase": [[18, 2, 1, "", "forward"]], "syllabus.examples.models.procgen_model.SmallNetBase": [[18, 2, 1, "", "forward"]], "syllabus.examples.task_wrappers": [[19, 0, 0, "-", "cartpole_task_wrapper"], [19, 0, 0, "-", "minigrid_task_wrapper"], [19, 0, 0, "-", "minihack_task_wrapper"], [19, 0, 0, "-", "nethack_task_wrapper"], [19, 0, 0, "-", "pistonball_task_wrapper"], [19, 0, 0, "-", "procgen_task_wrapper"]], "syllabus.examples.task_wrappers.cartpole_task_wrapper": [[19, 1, 1, "", "CartPoleTaskWrapper"]], "syllabus.examples.task_wrappers.cartpole_task_wrapper.CartPoleTaskWrapper": [[19, 2, 1, "", "change_task"], [19, 2, 1, "", "reset"]], "syllabus.examples.task_wrappers.minigrid_task_wrapper": [[19, 1, 1, "", "MinigridTaskWrapper"]], "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper": [[19, 2, 1, "", "change_task"], [19, 2, 1, "", "observation"], [19, 2, 1, "", "reset"], [19, 2, 1, "", "step"]], "syllabus.examples.task_wrappers.minihack_task_wrapper": [[19, 1, 1, "", "MinihackTaskWrapper"]], "syllabus.examples.task_wrappers.minihack_task_wrapper.MinihackTaskWrapper": [[19, 2, 1, "", "reset"]], "syllabus.examples.task_wrappers.nethack_task_wrapper": [[19, 1, 1, "", "NethackTaskWrapper"]], "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper": [[19, 2, 1, "", "change_task"], [19, 2, 1, "", "observation"], [19, 2, 1, "", "reset"], [19, 2, 1, "", "step"]], "syllabus.examples.task_wrappers.pistonball_task_wrapper": [[19, 1, 1, "", "PistonballTaskWrapper"]], "syllabus.examples.task_wrappers.pistonball_task_wrapper.PistonballTaskWrapper": [[19, 2, 1, "", "reset"]], "syllabus.examples.task_wrappers.procgen_task_wrapper": [[19, 1, 1, "", "ProcgenTaskWrapper"]], "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper": [[19, 2, 1, "", "change_task"], [19, 2, 1, "", "observation"], [19, 2, 1, "", "reset"], [19, 2, 1, "", "seed"], [19, 2, 1, "", "step"]], "syllabus.examples.torchbeast_nethack": [[17, 1, 1, "", "Crop"], [17, 6, 1, "", "Net"], [17, 1, 1, "", "NetHackNet"], [17, 1, 1, "", "RandomNet"], [17, 1, 1, "", "ResettingEnvironment"], [17, 4, 1, "", "act"], [17, 4, 1, "", "compute_baseline_loss"], [17, 4, 1, "", "compute_entropy_loss"], [17, 4, 1, "", "compute_policy_gradient_loss"], [17, 4, 1, "", "create_buffers"], [17, 4, 1, "", "create_env"], [17, 4, 1, "", "get_batch"], [17, 4, 1, "", "learn"], [17, 4, 1, "", "main"], [17, 4, 1, "", "nested_map"], [17, 4, 1, "", "parse_args"], [17, 4, 1, "", "parse_logpaths"], [17, 4, 1, "", "test"], [17, 4, 1, "", "train"]], "syllabus.examples.torchbeast_nethack.Crop": [[17, 2, 1, "", "forward"]], "syllabus.examples.torchbeast_nethack.NetHackNet": [[17, 2, 1, "", "forward"], [17, 2, 1, "", "initial_state"]], "syllabus.examples.torchbeast_nethack.RandomNet": [[17, 2, 1, "", "forward"], [17, 2, 1, "", "initial_state"]], "syllabus.examples.torchbeast_nethack.ResettingEnvironment": [[17, 2, 1, "", "close"], [17, 2, 1, "", "initial"], [17, 2, 1, "", "step"]], "syllabus.examples.vecenv": [[17, 1, 1, "", "RunningMeanStd"], [17, 1, 1, "", "TransposeImageProcgen"], [17, 1, 1, "", "TransposeObs"], [17, 1, 1, "", "VecEnv"], [17, 1, 1, "", "VecEnvObservationWrapper"], [17, 1, 1, "", "VecEnvWrapper"], [17, 1, 1, "", "VecExtractDictObs"], [17, 1, 1, "", "VecMonitor"], [17, 1, 1, "", "VecNormalize"], [17, 1, 1, "", "VecPyTorchProcgen"], [17, 4, 1, "", "update_mean_var_count_from_moments"]], "syllabus.examples.vecenv.RunningMeanStd": [[17, 2, 1, "", "update"], [17, 2, 1, "", "update_from_moments"]], "syllabus.examples.vecenv.TransposeImageProcgen": [[17, 2, 1, "", "observation"]], "syllabus.examples.vecenv.VecEnv": [[17, 2, 1, "", "close"], [17, 2, 1, "", "close_extras"], [17, 6, 1, "", "closed"], [17, 2, 1, "", "get_images"], [17, 2, 1, "", "get_viewer"], [17, 6, 1, "", "metadata"], [17, 2, 1, "", "render"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "step"], [17, 2, 1, "", "step_async"], [17, 2, 1, "", "step_env"], [17, 2, 1, "", "step_wait"], [17, 3, 1, "", "unwrapped"], [17, 6, 1, "", "viewer"]], "syllabus.examples.vecenv.VecEnvObservationWrapper": [[17, 2, 1, "", "process"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "step_wait"]], "syllabus.examples.vecenv.VecEnvWrapper": [[17, 2, 1, "", "close"], [17, 2, 1, "", "get_images"], [17, 2, 1, "", "render"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "step_async"], [17, 2, 1, "", "step_wait"]], "syllabus.examples.vecenv.VecExtractDictObs": [[17, 2, 1, "", "process"]], "syllabus.examples.vecenv.VecMonitor": [[17, 2, 1, "", "reset"], [17, 2, 1, "", "step_wait"]], "syllabus.examples.vecenv.VecNormalize": [[17, 2, 1, "", "reset"], [17, 2, 1, "", "reset_agent"], [17, 2, 1, "", "reset_alp_gmm"], [17, 2, 1, "", "reset_random"], [17, 2, 1, "", "step_wait"]], "syllabus.examples.vecenv.VecPyTorchProcgen": [[17, 3, 1, "", "raw_venv"], [17, 2, 1, "", "reset"], [17, 2, 1, "", "step_async"], [17, 2, 1, "", "step_wait"]], "syllabus.examples.vtrace": [[17, 1, 1, "", "VTraceFromLogitsReturns"], [17, 1, 1, "", "VTraceReturns"], [17, 4, 1, "", "action_log_probs"], [17, 4, 1, "", "from_importance_weights"], [17, 4, 1, "", "from_logits"]], "syllabus.examples.vtrace.VTraceFromLogitsReturns": [[17, 6, 1, "", "behavior_action_log_probs"], [17, 6, 1, "", "log_rhos"], [17, 6, 1, "", "pg_advantages"], [17, 6, 1, "", "target_action_log_probs"], [17, 6, 1, "", "vs"]], "syllabus.examples.vtrace.VTraceReturns": [[17, 6, 1, "", "pg_advantages"], [17, 6, 1, "", "vs"]], "syllabus.task_space": [[20, 0, 0, "-", "task_space"]], "syllabus.task_space.task_space": [[20, 1, 1, "", "TaskSpace"]], "syllabus.task_space.task_space.TaskSpace": [[20, 2, 1, "", "add_task"], [20, 2, 1, "", "contains"], [20, 2, 1, "", "count_tasks"], [20, 2, 1, "", "decode"], [20, 2, 1, "", "encode"], [20, 2, 1, "", "get_tasks"], [20, 2, 1, "", "increase_space"], [20, 2, 1, "", "list_tasks"], [20, 3, 1, "", "num_tasks"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "task_name"], [20, 3, 1, "", "tasks"]], "syllabus.tests": [[21, 0, 0, "-", "sync_test_curriculum"], [21, 0, 0, "-", "sync_test_env"], [21, 0, 0, "-", "utils"]], "syllabus.tests.sync_test_curriculum": [[21, 1, 1, "", "SyncTestCurriculum"]], "syllabus.tests.sync_test_curriculum.SyncTestCurriculum": [[21, 6, 1, "", "REQUIRES_CENTRAL_UPDATES"], [21, 6, 1, "", "REQUIRES_STEP_UPDATES"], [21, 2, 1, "", "get_stats"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "update_on_step"], [21, 2, 1, "", "update_task_progress"]], "syllabus.tests.sync_test_env": [[21, 1, 1, "", "SyncTestEnv"]], "syllabus.tests.sync_test_env.SyncTestEnv": [[21, 2, 1, "", "reset"], [21, 2, 1, "", "step"]], "syllabus.tests.utils": [[21, 4, 1, "", "create_minigrid_env"], [21, 4, 1, "", "create_nethack_env"], [21, 4, 1, "", "create_synctest_env"], [21, 4, 1, "", "evaluate_random_policy"], [21, 4, 1, "", "run_episode"], [21, 4, 1, "", "run_episodes"], [21, 4, 1, "", "run_episodes_queue"], [21, 4, 1, "", "test_native_multiprocess"], [21, 4, 1, "", "test_ray_multiprocess"], [21, 4, 1, "", "test_single_process"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"curriculum": [0, 3, 4, 6, 12, 16, 22], "content": [17, 18, 19, 21], "creat": [3, 22], "your": 3, "own": 3, "requir": [3, 13], "method": [3, 4, 6, 13], "depend": 3, "recommend": 3, "option": [3, 13], "implement": [], "learn": [0, 4, 6], "domain": [4, 15], "random": [4, 15], "sequenti": [4, 14], "simpl": 4, "box": 4, "progress": 4, "priorit": [4, 16], "level": [4, 16], "replai": [4, 16], "syllabu": [6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22], "document": 6, "log": 8, "packag": [10, 14, 18, 21], "subpackag": [10, 17], "modul": [6, 11, 12, 13, 14, 17, 18, 19, 20, 21], "core": [11, 12, 13], "submodul": [17, 18, 21], "curriculum_bas": 12, "curriculum_sync_wrapp": 11, "environment_sync_wrapp": 11, "environment_task_env": 13, "environment_task_wrapp": [], "multivariate_curriculum_wrapp": 11, "reinit_task_wrapp": 13, "subclass_task_wrapp": 13, "util": [11, 21], "curricula": 14, "domain_random": [], "learning_progress": 14, "noop": 14, "simple_box": 14, "plr": 16, "plr_wrapper": [], "task_sampl": [], "exampl": [17, 18, 19, 22], "cleanrl_cartpol": 17, "cleanrl_minihack_plr": 17, "cleanrl_pettingzoo_pistonball_plr": [], "rllib_cartpol": 17, "torchbeast_nethack": 17, "vtrace": 17, "task_wrapp": [13, 19], "cartpole_task_wrapp": 19, "minigrid_task_wrapp": 19, "minihack_task_wrapp": 19, "nethack_task_wrapp": 19, "pistonball_task_wrapp": 19, "task_spac": 20, "test_task_spac": [], "test": 21, "sync_test_curriculum": 21, "sync_test_env": 21, "quickstart": 22, "synchron": [6, 11, 22], "environ": [1, 22], "task": [6, 13, 20, 22], "wrapper": [], "featur": [13, 20], "space": [6, 20, 22], "model": 18, "minigrid_model": 18, "procgen_model": 18, "cleanrl_minigrid_plr": 17, "cleanrl_ppo_minigrid_bas": 17, "cleanrl_procgen": 17, "cleanrl_procgen_plr": 17, "dormant_neuron": [], "rllib_cartpole_bas": 17, "vecenv": 17, "procgen_task_wrapp": 19, "unsupervis": 1, "design": 1, "evalu": 5, "usag": [11, 16, 20], "tasksampl": 16, "full": 6, "background": 6, "task_interfac": 13, "interfac": 13, "taskwrapp": 19, "get": 6, "start": 6, "api": 6, "instal": 7, "global": 11, "defin": 22, "futur": 20, "benchmark": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Creating Your Own Curriculum": [[3, "creating-your-own-curriculum"]], "Required Methods": [[3, "required-methods"], [13, "required-methods"]], "Curriculum Dependent Methods": [[3, "curriculum-dependent-methods"]], "Recommended Methods": [[3, "recommended-methods"]], "Optional Methods": [[3, "optional-methods"]], "Logging": [[8, "logging"]], "syllabus": [[9, "syllabus"]], "Curriculum Learning": [[0, "curriculum-learning"]], "Unsupervised Environment Design": [[1, "unsupervised-environment-design"]], "Curriculum Methods": [[4, "curriculum-methods"]], "Domain Randomization": [[4, "domain-randomization"], [15, "domain-randomization"], [15, "id1"]], "Sequential Curriculum": [[4, "sequential-curriculum"]], "Simple Box Curriculum": [[4, "simple-box-curriculum"]], "Learning Progress": [[4, "learning-progress"]], "Prioritized Level Replay": [[4, "prioritized-level-replay"], [16, "id1"]], "Evaluation": [[5, "evaluation"]], "Installation": [[7, "installation"]], "syllabus package": [[10, "syllabus-package"]], "Subpackages": [[10, "subpackages"], [17, "subpackages"]], "Submodules": [[18, "submodules"], [17, "submodules"], [21, "submodules"]], "Module contents": [[18, "module-syllabus.examples.models"], [17, "module-syllabus.examples"], [19, "module-syllabus.examples.task_wrappers"], [21, "module-syllabus.tests"]], "syllabus.examples.models package": [[18, "syllabus-examples-models-package"]], "syllabus.examples.models.minigrid_model module": [[18, "module-syllabus.examples.models.minigrid_model"]], "syllabus.examples.models.procgen_model module": [[18, "module-syllabus.examples.models.procgen_model"]], "Benchmarks": [[2, "benchmarks"]], "Syllabus Documentation": [[6, "syllabus-documentation"]], "Getting Started:": [[6, null]], "Curriculum Learning Background:": [[6, null]], "Curriculum API:": [[6, null]], "Curriculum Methods:": [[6, null]], "Task Spaces:": [[6, null]], "Synchronization:": [[6, null]], "Full Modules:": [[6, null]], "Global Synchronization": [[11, "global-synchronization"]], "Usage": [[11, "usage"], [16, "usage"], [20, "usage"]], "syllabus.core.curriculum_sync_wrapper module": [[11, "module-syllabus.core.curriculum_sync_wrapper"]], "syllabus.core.environment_sync_wrapper module": [[11, "module-syllabus.core.environment_sync_wrapper"]], "syllabus.core.multivariate_curriculum_wrapper module": [[11, "module-syllabus.core.multivariate_curriculum_wrapper"]], "syllabus.core.utils module": [[11, "module-syllabus.core.utils"]], "Curriculum": [[12, "curriculum"]], "syllabus.core.curriculum_base module": [[12, "module-syllabus.core.curriculum_base"]], "Task Interface": [[13, "task-interface"]], "Optional features": [[13, "optional-features"]], "syllabus.core.task_interface.environment_task_env module": [[13, "syllabus-core-task-interface-environment-task-env-module"]], "syllabus.core.task_interface.reinit_task_wrapper module": [[13, "module-syllabus.core.task_interface.reinit_task_wrapper"]], "syllabus.core.task_interface.subclass_task_wrapper module": [[13, "module-syllabus.core.task_interface.subclass_task_wrapper"]], "syllabus.core.task_interface.task_wrapper module": [[13, "syllabus-core-task-interface-task-wrapper-module"]], "syllabus.curricula package": [[14, "syllabus-curricula-package"]], "syllabus.curricula.learning_progress module": [[14, "module-syllabus.curricula.learning_progress"]], "syllabus.curricula.noop module": [[14, "module-syllabus.curricula.noop"]], "syllabus.curricula.sequential module": [[14, "module-syllabus.curricula.sequential"]], "syllabus.curricula.simple_box module": [[14, "module-syllabus.curricula.simple_box"]], "Prioritized Level Replay (PLR) Curriculum": [[16, "prioritized-level-replay-plr-curriculum"]], "TaskSampler": [[16, "tasksampler"]], "Examples": [[17, "examples"], [22, "examples"]], "syllabus.examples.cleanrl_cartpole module": [[17, "module-syllabus.examples.cleanrl_cartpole"]], "syllabus.examples.cleanrl_minigrid_plr module": [[17, "module-syllabus.examples.cleanrl_minigrid_plr"]], "syllabus.examples.cleanrl_minihack_plr module": [[17, "module-syllabus.examples.cleanrl_minihack_plr"]], "syllabus.examples.cleanrl_ppo_minigrid_base module": [[17, "module-syllabus.examples.cleanrl_ppo_minigrid_base"]], "syllabus.examples.cleanrl_procgen module": [[17, "module-syllabus.examples.cleanrl_procgen"]], "syllabus.examples.cleanrl_procgen_plr module": [[17, "module-syllabus.examples.cleanrl_procgen_plr"]], "syllabus.examples.rllib_cartpole module": [[17, "module-syllabus.examples.rllib_cartpole"]], "syllabus.examples.rllib_cartpole_base module": [[17, "module-syllabus.examples.rllib_cartpole_base"]], "syllabus.examples.torchbeast_nethack module": [[17, "module-syllabus.examples.torchbeast_nethack"]], "syllabus.examples.vecenv module": [[17, "module-syllabus.examples.vecenv"]], "syllabus.examples.vtrace module": [[17, "module-syllabus.examples.vtrace"]], "Example TaskWrappers": [[19, "example-taskwrappers"]], "syllabus.examples.task_wrappers.cartpole_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.cartpole_task_wrapper"]], "syllabus.examples.task_wrappers.minigrid_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.minigrid_task_wrapper"]], "syllabus.examples.task_wrappers.minihack_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.minihack_task_wrapper"]], "syllabus.examples.task_wrappers.nethack_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.nethack_task_wrapper"]], "syllabus.examples.task_wrappers.pistonball_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.pistonball_task_wrapper"]], "syllabus.examples.task_wrappers.procgen_task_wrapper module": [[19, "module-syllabus.examples.task_wrappers.procgen_task_wrapper"]], "Task Spaces": [[20, "task-spaces"]], "Future Features": [[20, "future-features"]], "syllabus.task_space.task_space module": [[20, "module-syllabus.task_space.task_space"]], "syllabus.tests package": [[21, "syllabus-tests-package"]], "syllabus.tests.sync_test_curriculum module": [[21, "module-syllabus.tests.sync_test_curriculum"]], "syllabus.tests.sync_test_env module": [[21, "module-syllabus.tests.sync_test_env"]], "syllabus.tests.utils module": [[21, "module-syllabus.tests.utils"]], "Quickstart": [[22, "quickstart"]], "Define a Task Space": [[22, "define-a-task-space"]], "Creating a Syllabus Curriculum": [[22, "creating-a-syllabus-curriculum"]], "Synchronizing the Curriculum": [[22, "synchronizing-the-curriculum"]], "Synchronizing the Environment": [[22, "synchronizing-the-environment"]]}, "indexentries": {"curriculumwrapper (class in syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper"]], "multiprocessingcurriculumwrapper (class in syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper"]], "multiprocessingsyncwrapper (class in syllabus.core.environment_sync_wrapper)": [[11, "syllabus.core.environment_sync_wrapper.MultiProcessingSyncWrapper"]], "multitaskwrapper (class in syllabus.core.multivariate_curriculum_wrapper)": [[11, "syllabus.core.multivariate_curriculum_wrapper.MultitaskWrapper"]], "pettingzoomultiprocessingsyncwrapper (class in syllabus.core.environment_sync_wrapper)": [[11, "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper"]], "raycurriculumwrapper (class in syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper"]], "raysyncwrapper (class in syllabus.core.environment_sync_wrapper)": [[11, "syllabus.core.environment_sync_wrapper.RaySyncWrapper"]], "usageerror": [[11, "syllabus.core.utils.UsageError"]], "add_task() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.add_task"]], "add_task() (syllabus.core.curriculum_sync_wrapper.multiprocessingcurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper.add_task"]], "add_task() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.add_task"]], "add_task() (syllabus.core.environment_sync_wrapper.multiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.MultiProcessingSyncWrapper.add_task"]], "add_task() (syllabus.core.environment_sync_wrapper.pettingzoomultiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper.add_task"]], "add_task() (syllabus.core.environment_sync_wrapper.raysyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.RaySyncWrapper.add_task"]], "agents (syllabus.core.environment_sync_wrapper.pettingzoomultiprocessingsyncwrapper property)": [[11, "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper.agents"]], "batch_update() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.batch_update"]], "batch_update() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.batch_update"]], "change_task() (syllabus.core.environment_sync_wrapper.raysyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.RaySyncWrapper.change_task"]], "count_tasks() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.count_tasks"]], "count_tasks() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.count_tasks"]], "decorate_all_functions() (in module syllabus.core.utils)": [[11, "syllabus.core.utils.decorate_all_functions"]], "enumerate_axes() (in module syllabus.core.utils)": [[11, "syllabus.core.utils.enumerate_axes"]], "get_tasks() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.get_tasks"]], "get_tasks() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.get_tasks"]], "log_metrics() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.log_metrics"]], "log_metrics() (syllabus.core.curriculum_sync_wrapper.multiprocessingcurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper.log_metrics"]], "log_metrics() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.log_metrics"]], "log_metrics() (syllabus.core.multivariate_curriculum_wrapper.multitaskwrapper method)": [[11, "syllabus.core.multivariate_curriculum_wrapper.MultitaskWrapper.log_metrics"]], "make_multiprocessing_curriculum() (in module syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.make_multiprocessing_curriculum"]], "make_ray_curriculum() (in module syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.make_ray_curriculum"]], "module": [[11, "module-syllabus.core.curriculum_sync_wrapper"], [11, "module-syllabus.core.environment_sync_wrapper"], [11, "module-syllabus.core.multivariate_curriculum_wrapper"], [11, "module-syllabus.core.utils"], [12, "module-syllabus.core.curriculum_base"], [13, "module-syllabus.core.task_interface.environment_task_env"], [13, "module-syllabus.core.task_interface.reinit_task_wrapper"], [13, "module-syllabus.core.task_interface.subclass_task_wrapper"], [13, "module-syllabus.core.task_interface.task_wrapper"], [14, "module-syllabus.curricula.learning_progress"], [14, "module-syllabus.curricula.noop"], [14, "module-syllabus.curricula.sequential"], [14, "module-syllabus.curricula.simple_box"], [15, "module-syllabus.curricula.domain_randomization"], [16, "module-syllabus.curricula.plr.plr_wrapper"], [16, "module-syllabus.curricula.plr.task_sampler"], [17, "module-syllabus.examples"], [17, "module-syllabus.examples.cleanrl_cartpole"], [17, "module-syllabus.examples.cleanrl_minigrid_plr"], [17, "module-syllabus.examples.cleanrl_minihack_plr"], [17, "module-syllabus.examples.cleanrl_ppo_minigrid_base"], [17, "module-syllabus.examples.cleanrl_procgen"], [17, "module-syllabus.examples.cleanrl_procgen_plr"], [17, "module-syllabus.examples.rllib_cartpole"], [17, "module-syllabus.examples.rllib_cartpole_base"], [17, "module-syllabus.examples.torchbeast_nethack"], [17, "module-syllabus.examples.vecenv"], [17, "module-syllabus.examples.vtrace"], [19, "module-syllabus.examples.task_wrappers"], [19, "module-syllabus.examples.task_wrappers.cartpole_task_wrapper"], [19, "module-syllabus.examples.task_wrappers.minigrid_task_wrapper"], [19, "module-syllabus.examples.task_wrappers.minihack_task_wrapper"], [19, "module-syllabus.examples.task_wrappers.nethack_task_wrapper"], [19, "module-syllabus.examples.task_wrappers.pistonball_task_wrapper"], [19, "module-syllabus.examples.task_wrappers.procgen_task_wrapper"], [20, "module-syllabus.task_space.task_space"], [21, "module-syllabus.tests"], [21, "module-syllabus.tests.sync_test_curriculum"], [21, "module-syllabus.tests.sync_test_env"], [21, "module-syllabus.tests.utils"]], "num_tasks (syllabus.core.curriculum_sync_wrapper.curriculumwrapper property)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.num_tasks"]], "remote_call() (in module syllabus.core.curriculum_sync_wrapper)": [[11, "syllabus.core.curriculum_sync_wrapper.remote_call"]], "reset() (syllabus.core.environment_sync_wrapper.multiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.MultiProcessingSyncWrapper.reset"]], "reset() (syllabus.core.environment_sync_wrapper.pettingzoomultiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper.reset"]], "reset() (syllabus.core.environment_sync_wrapper.raysyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.RaySyncWrapper.reset"]], "sample() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.sample"]], "sample() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.sample"]], "sample() (syllabus.core.multivariate_curriculum_wrapper.multitaskwrapper method)": [[11, "syllabus.core.multivariate_curriculum_wrapper.MultitaskWrapper.sample"]], "start() (syllabus.core.curriculum_sync_wrapper.multiprocessingcurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper.start"]], "step() (syllabus.core.environment_sync_wrapper.multiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.MultiProcessingSyncWrapper.step"]], "step() (syllabus.core.environment_sync_wrapper.pettingzoomultiprocessingsyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.PettingZooMultiProcessingSyncWrapper.step"]], "step() (syllabus.core.environment_sync_wrapper.raysyncwrapper method)": [[11, "syllabus.core.environment_sync_wrapper.RaySyncWrapper.step"]], "stop() (syllabus.core.curriculum_sync_wrapper.multiprocessingcurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.MultiProcessingCurriculumWrapper.stop"]], "syllabus.core.curriculum_sync_wrapper": [[11, "module-syllabus.core.curriculum_sync_wrapper"]], "syllabus.core.environment_sync_wrapper": [[11, "module-syllabus.core.environment_sync_wrapper"]], "syllabus.core.multivariate_curriculum_wrapper": [[11, "module-syllabus.core.multivariate_curriculum_wrapper"]], "syllabus.core.utils": [[11, "module-syllabus.core.utils"]], "tasks (syllabus.core.curriculum_sync_wrapper.curriculumwrapper property)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.tasks"]], "update() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.update"]], "update() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.update"]], "update_on_step() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.update_on_step"]], "update_on_step() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.update_on_step"]], "update_on_step_batch() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.update_on_step_batch"]], "update_on_step_batch() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.update_on_step_batch"]], "update_task_progress() (syllabus.core.curriculum_sync_wrapper.curriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.CurriculumWrapper.update_task_progress"]], "update_task_progress() (syllabus.core.curriculum_sync_wrapper.raycurriculumwrapper method)": [[11, "syllabus.core.curriculum_sync_wrapper.RayCurriculumWrapper.update_task_progress"]], "curriculum (class in syllabus.core.curriculum_base)": [[12, "syllabus.core.curriculum_base.Curriculum"]], "add_task() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.add_task"]], "log_metrics() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.log_metrics"]], "num_tasks (syllabus.core.curriculum_base.curriculum property)": [[12, "syllabus.core.curriculum_base.Curriculum.num_tasks"]], "sample() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.sample"]], "syllabus.core.curriculum_base": [[12, "module-syllabus.core.curriculum_base"]], "tasks (syllabus.core.curriculum_base.curriculum property)": [[12, "syllabus.core.curriculum_base.Curriculum.tasks"]], "update() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update"]], "update_batch() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_batch"]], "update_on_demand() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_on_demand"]], "update_on_episode() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_on_episode"]], "update_on_step() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_on_step"]], "update_on_step_batch() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_on_step_batch"]], "update_task_progress() (syllabus.core.curriculum_base.curriculum method)": [[12, "syllabus.core.curriculum_base.Curriculum.update_task_progress"]], "pettingzootaskenv (class in syllabus.core.task_interface.environment_task_env)": [[13, "syllabus.core.task_interface.environment_task_env.PettingZooTaskEnv"]], "pettingzootaskwrapper (class in syllabus.core.task_interface.task_wrapper)": [[13, "syllabus.core.task_interface.task_wrapper.PettingZooTaskWrapper"]], "reinittaskwrapper (class in syllabus.core.task_interface.reinit_task_wrapper)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper"]], "subclasstaskwrapper (class in syllabus.core.task_interface.subclass_task_wrapper)": [[13, "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper"]], "taskenv (class in syllabus.core.task_interface.environment_task_env)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv"]], "taskwrapper (class in syllabus.core.task_interface.task_wrapper)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper"]], "add_task() (syllabus.core.task_interface.environment_task_env.taskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv.add_task"]], "add_task() (syllabus.core.task_interface.task_wrapper.taskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper.add_task"]], "agents (syllabus.core.task_interface.environment_task_env.pettingzootaskenv property)": [[13, "syllabus.core.task_interface.environment_task_env.PettingZooTaskEnv.agents"]], "agents (syllabus.core.task_interface.task_wrapper.pettingzootaskwrapper property)": [[13, "syllabus.core.task_interface.task_wrapper.PettingZooTaskWrapper.agents"]], "change_task() (syllabus.core.task_interface.environment_task_env.taskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv.change_task"]], "change_task() (syllabus.core.task_interface.reinit_task_wrapper.reinittaskwrapper method)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper.change_task"]], "change_task() (syllabus.core.task_interface.subclass_task_wrapper.subclasstaskwrapper method)": [[13, "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper.change_task"]], "change_task() (syllabus.core.task_interface.task_wrapper.taskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper.change_task"]], "current_task (syllabus.core.task_interface.subclass_task_wrapper.subclasstaskwrapper property)": [[13, "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper.current_task"]], "decode_task() (syllabus.core.task_interface.reinit_task_wrapper.reinittaskwrapper method)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper.decode_task"]], "encode_task() (syllabus.core.task_interface.reinit_task_wrapper.reinittaskwrapper method)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper.encode_task"]], "get_current_task() (syllabus.core.task_interface.environment_task_env.pettingzootaskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.PettingZooTaskEnv.get_current_task"]], "get_current_task() (syllabus.core.task_interface.task_wrapper.pettingzootaskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.PettingZooTaskWrapper.get_current_task"]], "observation() (syllabus.core.task_interface.environment_task_env.taskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv.observation"]], "observation() (syllabus.core.task_interface.task_wrapper.taskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper.observation"]], "reset() (syllabus.core.task_interface.environment_task_env.taskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv.reset"]], "reset() (syllabus.core.task_interface.reinit_task_wrapper.reinittaskwrapper method)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper.reset"]], "reset() (syllabus.core.task_interface.subclass_task_wrapper.subclasstaskwrapper method)": [[13, "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper.reset"]], "reset() (syllabus.core.task_interface.task_wrapper.taskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper.reset"]], "step() (syllabus.core.task_interface.environment_task_env.taskenv method)": [[13, "syllabus.core.task_interface.environment_task_env.TaskEnv.step"]], "step() (syllabus.core.task_interface.reinit_task_wrapper.reinittaskwrapper method)": [[13, "syllabus.core.task_interface.reinit_task_wrapper.ReinitTaskWrapper.step"]], "step() (syllabus.core.task_interface.subclass_task_wrapper.subclasstaskwrapper method)": [[13, "syllabus.core.task_interface.subclass_task_wrapper.SubclassTaskWrapper.step"]], "step() (syllabus.core.task_interface.task_wrapper.taskwrapper method)": [[13, "syllabus.core.task_interface.task_wrapper.TaskWrapper.step"]], "syllabus.core.task_interface.environment_task_env": [[13, "module-syllabus.core.task_interface.environment_task_env"]], "syllabus.core.task_interface.reinit_task_wrapper": [[13, "module-syllabus.core.task_interface.reinit_task_wrapper"]], "syllabus.core.task_interface.subclass_task_wrapper": [[13, "module-syllabus.core.task_interface.subclass_task_wrapper"]], "syllabus.core.task_interface.task_wrapper": [[13, "module-syllabus.core.task_interface.task_wrapper"]], "learningprogresscurriculum (class in syllabus.curricula.learning_progress)": [[14, "syllabus.curricula.learning_progress.LearningProgressCurriculum"]], "noopcurriculum (class in syllabus.curricula.noop)": [[14, "syllabus.curricula.noop.NoopCurriculum"]], "requires_central_updates (syllabus.curricula.learning_progress.learningprogresscurriculum attribute)": [[14, "syllabus.curricula.learning_progress.LearningProgressCurriculum.REQUIRES_CENTRAL_UPDATES"]], "requires_central_updates (syllabus.curricula.noop.noopcurriculum attribute)": [[14, "syllabus.curricula.noop.NoopCurriculum.REQUIRES_CENTRAL_UPDATES"]], "requires_central_updates (syllabus.curricula.sequential.sequentialcurriculum attribute)": [[14, "syllabus.curricula.sequential.SequentialCurriculum.REQUIRES_CENTRAL_UPDATES"]], "requires_central_updates (syllabus.curricula.simple_box.simpleboxcurriculum attribute)": [[14, "syllabus.curricula.simple_box.SimpleBoxCurriculum.REQUIRES_CENTRAL_UPDATES"]], "requires_step_updates (syllabus.curricula.learning_progress.learningprogresscurriculum attribute)": [[14, "syllabus.curricula.learning_progress.LearningProgressCurriculum.REQUIRES_STEP_UPDATES"]], "requires_step_updates (syllabus.curricula.noop.noopcurriculum attribute)": [[14, "syllabus.curricula.noop.NoopCurriculum.REQUIRES_STEP_UPDATES"]], "requires_step_updates (syllabus.curricula.sequential.sequentialcurriculum attribute)": [[14, "syllabus.curricula.sequential.SequentialCurriculum.REQUIRES_STEP_UPDATES"]], "requires_step_updates (syllabus.curricula.simple_box.simpleboxcurriculum attribute)": [[14, "syllabus.curricula.simple_box.SimpleBoxCurriculum.REQUIRES_STEP_UPDATES"]], "sequentialcurriculum (class in syllabus.curricula.sequential)": [[14, "syllabus.curricula.sequential.SequentialCurriculum"]], "simpleboxcurriculum (class in syllabus.curricula.simple_box)": [[14, "syllabus.curricula.simple_box.SimpleBoxCurriculum"]], "add_task() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.add_task"]], "on_step() (syllabus.curricula.learning_progress.learningprogresscurriculum method)": [[14, "syllabus.curricula.learning_progress.LearningProgressCurriculum.on_step"]], "remaining_tasks() (syllabus.curricula.sequential.sequentialcurriculum method)": [[14, "syllabus.curricula.sequential.SequentialCurriculum.remaining_tasks"]], "sample() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.sample"]], "sample() (syllabus.curricula.sequential.sequentialcurriculum method)": [[14, "syllabus.curricula.sequential.SequentialCurriculum.sample"]], "sample() (syllabus.curricula.simple_box.simpleboxcurriculum method)": [[14, "syllabus.curricula.simple_box.SimpleBoxCurriculum.sample"]], "syllabus.curricula.learning_progress": [[14, "module-syllabus.curricula.learning_progress"]], "syllabus.curricula.noop": [[14, "module-syllabus.curricula.noop"]], "syllabus.curricula.sequential": [[14, "module-syllabus.curricula.sequential"]], "syllabus.curricula.simple_box": [[14, "module-syllabus.curricula.simple_box"]], "update() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update"]], "update_on_demand() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update_on_demand"]], "update_on_episode() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update_on_episode"]], "update_on_step() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update_on_step"]], "update_on_step_batch() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update_on_step_batch"]], "update_task_progress() (syllabus.curricula.learning_progress.learningprogresscurriculum method)": [[14, "syllabus.curricula.learning_progress.LearningProgressCurriculum.update_task_progress"]], "update_task_progress() (syllabus.curricula.noop.noopcurriculum method)": [[14, "syllabus.curricula.noop.NoopCurriculum.update_task_progress"]], "update_task_progress() (syllabus.curricula.simple_box.simpleboxcurriculum method)": [[14, "syllabus.curricula.simple_box.SimpleBoxCurriculum.update_task_progress"]], "domainrandomization (class in syllabus.curricula.domain_randomization)": [[15, "syllabus.curricula.domain_randomization.DomainRandomization"]], "requires_central_updates (syllabus.curricula.domain_randomization.domainrandomization attribute)": [[15, "syllabus.curricula.domain_randomization.DomainRandomization.REQUIRES_CENTRAL_UPDATES"]], "requires_step_updates (syllabus.curricula.domain_randomization.domainrandomization attribute)": [[15, "syllabus.curricula.domain_randomization.DomainRandomization.REQUIRES_STEP_UPDATES"]], "add_task() (syllabus.curricula.domain_randomization.domainrandomization method)": [[15, "syllabus.curricula.domain_randomization.DomainRandomization.add_task"]], "syllabus.curricula.domain_randomization": [[15, "module-syllabus.curricula.domain_randomization"]], "prioritizedlevelreplay (class in syllabus.curricula.plr.plr_wrapper)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay"]], "requires_central_updates (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay attribute)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.REQUIRES_CENTRAL_UPDATES"]], "requires_step_updates (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay attribute)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.REQUIRES_STEP_UPDATES"]], "rolloutstorage (class in syllabus.curricula.plr.plr_wrapper)": [[16, "syllabus.curricula.plr.plr_wrapper.RolloutStorage"]], "tasksampler (class in syllabus.curricula.plr.task_sampler)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler"]], "after_update() (syllabus.curricula.plr.plr_wrapper.rolloutstorage method)": [[16, "syllabus.curricula.plr.plr_wrapper.RolloutStorage.after_update"]], "after_update() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.after_update"]], "compute_returns() (syllabus.curricula.plr.plr_wrapper.rolloutstorage method)": [[16, "syllabus.curricula.plr.plr_wrapper.RolloutStorage.compute_returns"]], "insert() (syllabus.curricula.plr.plr_wrapper.rolloutstorage method)": [[16, "syllabus.curricula.plr.plr_wrapper.RolloutStorage.insert"]], "log_metrics() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.log_metrics"]], "metrics() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.metrics"]], "requires_value_buffers (syllabus.curricula.plr.task_sampler.tasksampler property)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.requires_value_buffers"]], "sample() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.sample"]], "sample() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.sample"]], "sample_weights() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.sample_weights"]], "syllabus.curricula.plr.plr_wrapper": [[16, "module-syllabus.curricula.plr.plr_wrapper"]], "syllabus.curricula.plr.task_sampler": [[16, "module-syllabus.curricula.plr.task_sampler"]], "to() (syllabus.curricula.plr.plr_wrapper.rolloutstorage method)": [[16, "syllabus.curricula.plr.plr_wrapper.RolloutStorage.to"]], "update_on_demand() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.update_on_demand"]], "update_on_episode() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.update_on_episode"]], "update_on_step() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.update_on_step"]], "update_on_step_batch() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.update_on_step_batch"]], "update_task_progress() (syllabus.curricula.plr.plr_wrapper.prioritizedlevelreplay method)": [[16, "syllabus.curricula.plr.plr_wrapper.PrioritizedLevelReplay.update_task_progress"]], "update_task_score() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.update_task_score"]], "update_with_rollouts() (syllabus.curricula.plr.task_sampler.tasksampler method)": [[16, "syllabus.curricula.plr.task_sampler.TaskSampler.update_with_rollouts"]], "agent (class in syllabus.examples.cleanrl_cartpole)": [[17, "syllabus.examples.cleanrl_cartpole.Agent"]], "agent (class in syllabus.examples.cleanrl_minihack_plr)": [[17, "syllabus.examples.cleanrl_minihack_plr.Agent"]], "agent (class in syllabus.examples.cleanrl_ppo_minigrid_base)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.Agent"]], "agent (class in syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.Agent"]], "convsequence (class in syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.ConvSequence"]], "crop (class in syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.Crop"]], "net (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.Net"]], "nethacknet (class in syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.NetHackNet"]], "randomnet (class in syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.RandomNet"]], "resettingenvironment (class in syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.ResettingEnvironment"]], "residualblock (class in syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.ResidualBlock"]], "runningmeanstd (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.RunningMeanStd"]], "transposeimageprocgen (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.TransposeImageProcgen"]], "transposeobs (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.TransposeObs"]], "vtracefromlogitsreturns (class in syllabus.examples.vtrace)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns"]], "vtracereturns (class in syllabus.examples.vtrace)": [[17, "syllabus.examples.vtrace.VTraceReturns"]], "vecenv (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecEnv"]], "vecenvobservationwrapper (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecEnvObservationWrapper"]], "vecenvwrapper (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecEnvWrapper"]], "vecextractdictobs (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecExtractDictObs"]], "vecmonitor (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecMonitor"]], "vecnormalize (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecNormalize"]], "vecpytorchprocgen (class in syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.VecPyTorchProcgen"]], "act() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.act"]], "action_log_probs() (in module syllabus.examples.vtrace)": [[17, "syllabus.examples.vtrace.action_log_probs"]], "behavior_action_log_probs (syllabus.examples.vtrace.vtracefromlogitsreturns attribute)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns.behavior_action_log_probs"]], "close() (syllabus.examples.torchbeast_nethack.resettingenvironment method)": [[17, "syllabus.examples.torchbeast_nethack.ResettingEnvironment.close"]], "close() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.close"]], "close() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.close"]], "close_extras() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.close_extras"]], "closed (syllabus.examples.vecenv.vecenv attribute)": [[17, "syllabus.examples.vecenv.VecEnv.closed"]], "compute_baseline_loss() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.compute_baseline_loss"]], "compute_entropy_loss() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.compute_entropy_loss"]], "compute_policy_gradient_loss() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.compute_policy_gradient_loss"]], "create_buffers() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.create_buffers"]], "create_env() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.create_env"]], "evaluate() (in module syllabus.examples.cleanrl_procgen_plr)": [[17, "syllabus.examples.cleanrl_procgen_plr.evaluate"]], "forward() (syllabus.examples.cleanrl_procgen.convsequence method)": [[17, "syllabus.examples.cleanrl_procgen.ConvSequence.forward"]], "forward() (syllabus.examples.cleanrl_procgen.residualblock method)": [[17, "syllabus.examples.cleanrl_procgen.ResidualBlock.forward"]], "forward() (syllabus.examples.torchbeast_nethack.crop method)": [[17, "syllabus.examples.torchbeast_nethack.Crop.forward"]], "forward() (syllabus.examples.torchbeast_nethack.nethacknet method)": [[17, "syllabus.examples.torchbeast_nethack.NetHackNet.forward"]], "forward() (syllabus.examples.torchbeast_nethack.randomnet method)": [[17, "syllabus.examples.torchbeast_nethack.RandomNet.forward"]], "from_importance_weights() (in module syllabus.examples.vtrace)": [[17, "syllabus.examples.vtrace.from_importance_weights"]], "from_logits() (in module syllabus.examples.vtrace)": [[17, "syllabus.examples.vtrace.from_logits"]], "get_action_and_value() (syllabus.examples.cleanrl_cartpole.agent method)": [[17, "syllabus.examples.cleanrl_cartpole.Agent.get_action_and_value"]], "get_action_and_value() (syllabus.examples.cleanrl_minihack_plr.agent method)": [[17, "syllabus.examples.cleanrl_minihack_plr.Agent.get_action_and_value"]], "get_action_and_value() (syllabus.examples.cleanrl_ppo_minigrid_base.agent method)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.Agent.get_action_and_value"]], "get_action_and_value() (syllabus.examples.cleanrl_procgen.agent method)": [[17, "syllabus.examples.cleanrl_procgen.Agent.get_action_and_value"]], "get_batch() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.get_batch"]], "get_images() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.get_images"]], "get_images() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.get_images"]], "get_output_shape() (syllabus.examples.cleanrl_procgen.convsequence method)": [[17, "syllabus.examples.cleanrl_procgen.ConvSequence.get_output_shape"]], "get_value() (syllabus.examples.cleanrl_cartpole.agent method)": [[17, "syllabus.examples.cleanrl_cartpole.Agent.get_value"]], "get_value() (syllabus.examples.cleanrl_minihack_plr.agent method)": [[17, "syllabus.examples.cleanrl_minihack_plr.Agent.get_value"]], "get_value() (syllabus.examples.cleanrl_ppo_minigrid_base.agent method)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.Agent.get_value"]], "get_value() (syllabus.examples.cleanrl_procgen.agent method)": [[17, "syllabus.examples.cleanrl_procgen.Agent.get_value"]], "get_viewer() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.get_viewer"]], "initial() (syllabus.examples.torchbeast_nethack.resettingenvironment method)": [[17, "syllabus.examples.torchbeast_nethack.ResettingEnvironment.initial"]], "initial_state() (syllabus.examples.torchbeast_nethack.nethacknet method)": [[17, "syllabus.examples.torchbeast_nethack.NetHackNet.initial_state"]], "initial_state() (syllabus.examples.torchbeast_nethack.randomnet method)": [[17, "syllabus.examples.torchbeast_nethack.RandomNet.initial_state"]], "layer_init() (in module syllabus.examples.cleanrl_cartpole)": [[17, "syllabus.examples.cleanrl_cartpole.layer_init"]], "layer_init() (in module syllabus.examples.cleanrl_minihack_plr)": [[17, "syllabus.examples.cleanrl_minihack_plr.layer_init"]], "layer_init() (in module syllabus.examples.cleanrl_ppo_minigrid_base)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.layer_init"]], "layer_init() (in module syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.layer_init"]], "learn() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.learn"]], "level_replay_evaluate() (in module syllabus.examples.cleanrl_procgen_plr)": [[17, "syllabus.examples.cleanrl_procgen_plr.level_replay_evaluate"]], "log_rhos (syllabus.examples.vtrace.vtracefromlogitsreturns attribute)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns.log_rhos"]], "main() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.main"]], "make_env() (in module syllabus.examples.cleanrl_cartpole)": [[17, "syllabus.examples.cleanrl_cartpole.make_env"]], "make_env() (in module syllabus.examples.cleanrl_minigrid_plr)": [[17, "syllabus.examples.cleanrl_minigrid_plr.make_env"]], "make_env() (in module syllabus.examples.cleanrl_minihack_plr)": [[17, "syllabus.examples.cleanrl_minihack_plr.make_env"]], "make_env() (in module syllabus.examples.cleanrl_ppo_minigrid_base)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.make_env"]], "make_env() (in module syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.make_env"]], "make_env() (in module syllabus.examples.cleanrl_procgen_plr)": [[17, "syllabus.examples.cleanrl_procgen_plr.make_env"]], "metadata (syllabus.examples.vecenv.vecenv attribute)": [[17, "syllabus.examples.vecenv.VecEnv.metadata"]], "nested_map() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.nested_map"]], "observation() (syllabus.examples.vecenv.transposeimageprocgen method)": [[17, "syllabus.examples.vecenv.TransposeImageProcgen.observation"]], "parse_args() (in module syllabus.examples.cleanrl_cartpole)": [[17, "syllabus.examples.cleanrl_cartpole.parse_args"]], "parse_args() (in module syllabus.examples.cleanrl_minigrid_plr)": [[17, "syllabus.examples.cleanrl_minigrid_plr.parse_args"]], "parse_args() (in module syllabus.examples.cleanrl_minihack_plr)": [[17, "syllabus.examples.cleanrl_minihack_plr.parse_args"]], "parse_args() (in module syllabus.examples.cleanrl_ppo_minigrid_base)": [[17, "syllabus.examples.cleanrl_ppo_minigrid_base.parse_args"]], "parse_args() (in module syllabus.examples.cleanrl_procgen)": [[17, "syllabus.examples.cleanrl_procgen.parse_args"]], "parse_args() (in module syllabus.examples.cleanrl_procgen_plr)": [[17, "syllabus.examples.cleanrl_procgen_plr.parse_args"]], "parse_args() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.parse_args"]], "parse_logpaths() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.parse_logpaths"]], "pg_advantages (syllabus.examples.vtrace.vtracefromlogitsreturns attribute)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns.pg_advantages"]], "pg_advantages (syllabus.examples.vtrace.vtracereturns attribute)": [[17, "syllabus.examples.vtrace.VTraceReturns.pg_advantages"]], "process() (syllabus.examples.vecenv.vecenvobservationwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvObservationWrapper.process"]], "process() (syllabus.examples.vecenv.vecextractdictobs method)": [[17, "syllabus.examples.vecenv.VecExtractDictObs.process"]], "raw_venv (syllabus.examples.vecenv.vecpytorchprocgen property)": [[17, "syllabus.examples.vecenv.VecPyTorchProcgen.raw_venv"]], "render() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.render"]], "render() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.render"]], "reset() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.reset"]], "reset() (syllabus.examples.vecenv.vecenvobservationwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvObservationWrapper.reset"]], "reset() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.reset"]], "reset() (syllabus.examples.vecenv.vecmonitor method)": [[17, "syllabus.examples.vecenv.VecMonitor.reset"]], "reset() (syllabus.examples.vecenv.vecnormalize method)": [[17, "syllabus.examples.vecenv.VecNormalize.reset"]], "reset() (syllabus.examples.vecenv.vecpytorchprocgen method)": [[17, "syllabus.examples.vecenv.VecPyTorchProcgen.reset"]], "reset_agent() (syllabus.examples.vecenv.vecnormalize method)": [[17, "syllabus.examples.vecenv.VecNormalize.reset_agent"]], "reset_alp_gmm() (syllabus.examples.vecenv.vecnormalize method)": [[17, "syllabus.examples.vecenv.VecNormalize.reset_alp_gmm"]], "reset_random() (syllabus.examples.vecenv.vecnormalize method)": [[17, "syllabus.examples.vecenv.VecNormalize.reset_random"]], "step() (syllabus.examples.torchbeast_nethack.resettingenvironment method)": [[17, "syllabus.examples.torchbeast_nethack.ResettingEnvironment.step"]], "step() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.step"]], "step_async() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.step_async"]], "step_async() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.step_async"]], "step_async() (syllabus.examples.vecenv.vecpytorchprocgen method)": [[17, "syllabus.examples.vecenv.VecPyTorchProcgen.step_async"]], "step_env() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.step_env"]], "step_wait() (syllabus.examples.vecenv.vecenv method)": [[17, "syllabus.examples.vecenv.VecEnv.step_wait"]], "step_wait() (syllabus.examples.vecenv.vecenvobservationwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvObservationWrapper.step_wait"]], "step_wait() (syllabus.examples.vecenv.vecenvwrapper method)": [[17, "syllabus.examples.vecenv.VecEnvWrapper.step_wait"]], "step_wait() (syllabus.examples.vecenv.vecmonitor method)": [[17, "syllabus.examples.vecenv.VecMonitor.step_wait"]], "step_wait() (syllabus.examples.vecenv.vecnormalize method)": [[17, "syllabus.examples.vecenv.VecNormalize.step_wait"]], "step_wait() (syllabus.examples.vecenv.vecpytorchprocgen method)": [[17, "syllabus.examples.vecenv.VecPyTorchProcgen.step_wait"]], "syllabus.examples": [[17, "module-syllabus.examples"]], "syllabus.examples.cleanrl_cartpole": [[17, "module-syllabus.examples.cleanrl_cartpole"]], "syllabus.examples.cleanrl_minigrid_plr": [[17, "module-syllabus.examples.cleanrl_minigrid_plr"]], "syllabus.examples.cleanrl_minihack_plr": [[17, "module-syllabus.examples.cleanrl_minihack_plr"]], "syllabus.examples.cleanrl_ppo_minigrid_base": [[17, "module-syllabus.examples.cleanrl_ppo_minigrid_base"]], "syllabus.examples.cleanrl_procgen": [[17, "module-syllabus.examples.cleanrl_procgen"]], "syllabus.examples.cleanrl_procgen_plr": [[17, "module-syllabus.examples.cleanrl_procgen_plr"]], "syllabus.examples.rllib_cartpole": [[17, "module-syllabus.examples.rllib_cartpole"]], "syllabus.examples.rllib_cartpole_base": [[17, "module-syllabus.examples.rllib_cartpole_base"]], "syllabus.examples.torchbeast_nethack": [[17, "module-syllabus.examples.torchbeast_nethack"]], "syllabus.examples.vecenv": [[17, "module-syllabus.examples.vecenv"]], "syllabus.examples.vtrace": [[17, "module-syllabus.examples.vtrace"]], "target_action_log_probs (syllabus.examples.vtrace.vtracefromlogitsreturns attribute)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns.target_action_log_probs"]], "test() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.test"]], "train() (in module syllabus.examples.torchbeast_nethack)": [[17, "syllabus.examples.torchbeast_nethack.train"]], "unwrapped (syllabus.examples.vecenv.vecenv property)": [[17, "syllabus.examples.vecenv.VecEnv.unwrapped"]], "update() (syllabus.examples.vecenv.runningmeanstd method)": [[17, "syllabus.examples.vecenv.RunningMeanStd.update"]], "update_from_moments() (syllabus.examples.vecenv.runningmeanstd method)": [[17, "syllabus.examples.vecenv.RunningMeanStd.update_from_moments"]], "update_mean_var_count_from_moments() (in module syllabus.examples.vecenv)": [[17, "syllabus.examples.vecenv.update_mean_var_count_from_moments"]], "viewer (syllabus.examples.vecenv.vecenv attribute)": [[17, "syllabus.examples.vecenv.VecEnv.viewer"]], "vs (syllabus.examples.vtrace.vtracefromlogitsreturns attribute)": [[17, "syllabus.examples.vtrace.VTraceFromLogitsReturns.vs"]], "vs (syllabus.examples.vtrace.vtracereturns attribute)": [[17, "syllabus.examples.vtrace.VTraceReturns.vs"]], "wrap_vecenv() (in module syllabus.examples.cleanrl_procgen_plr)": [[17, "syllabus.examples.cleanrl_procgen_plr.wrap_vecenv"]], "cartpoletaskwrapper (class in syllabus.examples.task_wrappers.cartpole_task_wrapper)": [[19, "syllabus.examples.task_wrappers.cartpole_task_wrapper.CartPoleTaskWrapper"]], "minigridtaskwrapper (class in syllabus.examples.task_wrappers.minigrid_task_wrapper)": [[19, "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper"]], "minihacktaskwrapper (class in syllabus.examples.task_wrappers.minihack_task_wrapper)": [[19, "syllabus.examples.task_wrappers.minihack_task_wrapper.MinihackTaskWrapper"]], "nethacktaskwrapper (class in syllabus.examples.task_wrappers.nethack_task_wrapper)": [[19, "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper"]], "pistonballtaskwrapper (class in syllabus.examples.task_wrappers.pistonball_task_wrapper)": [[19, "syllabus.examples.task_wrappers.pistonball_task_wrapper.PistonballTaskWrapper"]], "procgentaskwrapper (class in syllabus.examples.task_wrappers.procgen_task_wrapper)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper"]], "change_task() (syllabus.examples.task_wrappers.cartpole_task_wrapper.cartpoletaskwrapper method)": [[19, "syllabus.examples.task_wrappers.cartpole_task_wrapper.CartPoleTaskWrapper.change_task"]], "change_task() (syllabus.examples.task_wrappers.minigrid_task_wrapper.minigridtaskwrapper method)": [[19, "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper.change_task"]], "change_task() (syllabus.examples.task_wrappers.nethack_task_wrapper.nethacktaskwrapper method)": [[19, "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper.change_task"]], "change_task() (syllabus.examples.task_wrappers.procgen_task_wrapper.procgentaskwrapper method)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper.change_task"]], "observation() (syllabus.examples.task_wrappers.minigrid_task_wrapper.minigridtaskwrapper method)": [[19, "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper.observation"]], "observation() (syllabus.examples.task_wrappers.nethack_task_wrapper.nethacktaskwrapper method)": [[19, "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper.observation"]], "observation() (syllabus.examples.task_wrappers.procgen_task_wrapper.procgentaskwrapper method)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper.observation"]], "reset() (syllabus.examples.task_wrappers.cartpole_task_wrapper.cartpoletaskwrapper method)": [[19, "syllabus.examples.task_wrappers.cartpole_task_wrapper.CartPoleTaskWrapper.reset"]], "reset() (syllabus.examples.task_wrappers.minigrid_task_wrapper.minigridtaskwrapper method)": [[19, "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper.reset"]], "reset() (syllabus.examples.task_wrappers.minihack_task_wrapper.minihacktaskwrapper method)": [[19, "syllabus.examples.task_wrappers.minihack_task_wrapper.MinihackTaskWrapper.reset"]], "reset() (syllabus.examples.task_wrappers.nethack_task_wrapper.nethacktaskwrapper method)": [[19, "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper.reset"]], "reset() (syllabus.examples.task_wrappers.pistonball_task_wrapper.pistonballtaskwrapper method)": [[19, "syllabus.examples.task_wrappers.pistonball_task_wrapper.PistonballTaskWrapper.reset"]], "reset() (syllabus.examples.task_wrappers.procgen_task_wrapper.procgentaskwrapper method)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper.reset"]], "seed() (syllabus.examples.task_wrappers.procgen_task_wrapper.procgentaskwrapper method)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper.seed"]], "step() (syllabus.examples.task_wrappers.minigrid_task_wrapper.minigridtaskwrapper method)": [[19, "syllabus.examples.task_wrappers.minigrid_task_wrapper.MinigridTaskWrapper.step"]], "step() (syllabus.examples.task_wrappers.nethack_task_wrapper.nethacktaskwrapper method)": [[19, "syllabus.examples.task_wrappers.nethack_task_wrapper.NethackTaskWrapper.step"]], "step() (syllabus.examples.task_wrappers.procgen_task_wrapper.procgentaskwrapper method)": [[19, "syllabus.examples.task_wrappers.procgen_task_wrapper.ProcgenTaskWrapper.step"]], "syllabus.examples.task_wrappers": [[19, "module-syllabus.examples.task_wrappers"]], "syllabus.examples.task_wrappers.cartpole_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.cartpole_task_wrapper"]], "syllabus.examples.task_wrappers.minigrid_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.minigrid_task_wrapper"]], "syllabus.examples.task_wrappers.minihack_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.minihack_task_wrapper"]], "syllabus.examples.task_wrappers.nethack_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.nethack_task_wrapper"]], "syllabus.examples.task_wrappers.pistonball_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.pistonball_task_wrapper"]], "syllabus.examples.task_wrappers.procgen_task_wrapper": [[19, "module-syllabus.examples.task_wrappers.procgen_task_wrapper"]], "taskspace (class in syllabus.task_space.task_space)": [[20, "syllabus.task_space.task_space.TaskSpace"]], "add_task() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.add_task"]], "contains() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.contains"]], "count_tasks() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.count_tasks"]], "decode() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.decode"]], "encode() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.encode"]], "get_tasks() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.get_tasks"]], "increase_space() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.increase_space"]], "list_tasks() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.list_tasks"]], "num_tasks (syllabus.task_space.task_space.taskspace property)": [[20, "syllabus.task_space.task_space.TaskSpace.num_tasks"]], "sample() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.sample"]], "syllabus.task_space.task_space": [[20, "module-syllabus.task_space.task_space"]], "task_name() (syllabus.task_space.task_space.taskspace method)": [[20, "syllabus.task_space.task_space.TaskSpace.task_name"]], "tasks (syllabus.task_space.task_space.taskspace property)": [[20, "syllabus.task_space.task_space.TaskSpace.tasks"]], "requires_central_updates (syllabus.tests.sync_test_curriculum.synctestcurriculum attribute)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.REQUIRES_CENTRAL_UPDATES"]], "requires_step_updates (syllabus.tests.sync_test_curriculum.synctestcurriculum attribute)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.REQUIRES_STEP_UPDATES"]], "synctestcurriculum (class in syllabus.tests.sync_test_curriculum)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum"]], "synctestenv (class in syllabus.tests.sync_test_env)": [[21, "syllabus.tests.sync_test_env.SyncTestEnv"]], "create_minigrid_env() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.create_minigrid_env"]], "create_nethack_env() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.create_nethack_env"]], "create_synctest_env() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.create_synctest_env"]], "evaluate_random_policy() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.evaluate_random_policy"]], "get_stats() (syllabus.tests.sync_test_curriculum.synctestcurriculum method)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.get_stats"]], "reset() (syllabus.tests.sync_test_env.synctestenv method)": [[21, "syllabus.tests.sync_test_env.SyncTestEnv.reset"]], "run_episode() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.run_episode"]], "run_episodes() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.run_episodes"]], "run_episodes_queue() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.run_episodes_queue"]], "sample() (syllabus.tests.sync_test_curriculum.synctestcurriculum method)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.sample"]], "step() (syllabus.tests.sync_test_env.synctestenv method)": [[21, "syllabus.tests.sync_test_env.SyncTestEnv.step"]], "syllabus.tests": [[21, "module-syllabus.tests"]], "syllabus.tests.sync_test_curriculum": [[21, "module-syllabus.tests.sync_test_curriculum"]], "syllabus.tests.sync_test_env": [[21, "module-syllabus.tests.sync_test_env"]], "syllabus.tests.utils": [[21, "module-syllabus.tests.utils"]], "test_native_multiprocess() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.test_native_multiprocess"]], "test_ray_multiprocess() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.test_ray_multiprocess"]], "test_single_process() (in module syllabus.tests.utils)": [[21, "syllabus.tests.utils.test_single_process"]], "update_on_step() (syllabus.tests.sync_test_curriculum.synctestcurriculum method)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.update_on_step"]], "update_task_progress() (syllabus.tests.sync_test_curriculum.synctestcurriculum method)": [[21, "syllabus.tests.sync_test_curriculum.SyncTestCurriculum.update_task_progress"]]}})